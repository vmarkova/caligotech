{
  "info": {
    "_postman_id": "e6a2dd99-ca5c-49d9-ab4c-47af3f00a56c",
    "name": "Jedha - source",
    "description": "Promotions Management Microservice",
    "schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
  },
  "item": [
    {
      "_postman_id": "43215260-595f-43c1-8dba-1b5235365f47",
      "name": "Promo lifecycle",
      "description": null,
      "item": [
        {
          "_postman_id": "d3b577a0-965f-4a1a-bd62-d7e8a7dc8eb9",
          "name": "Post promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "//const promo_id = testObject.id;",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "/*pm.test(\"Id check\", function () {",
                  "    pm.expect(testObject.id).to.eql(promo_id);",
                  "});*/",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "",
                  "",
                  "var schema = {",
                  "  \"title\" : \"string\",",
                  "  \"providerPromotionCode\" : \"string\",",
                  "  \"text\" : \"string\",",
                  "  \"details\" : \"string\",",
                  "  \"images\" :\"array\",",
                  "  \"rule\" : {",
                  "    \"id\" : null,",
                  "    \"type\" : \"string\",",
                  "    \"condition\" : {",
                  "      \"id\" : null,",
                  "      \"type\" : \"string\",",
                  "      \"mpr\" : 1,",
                  "      \"product\" : {",
                  "        \"upcs\" : \"array\",",
                  "        \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : [ \"string\" ]",
                  "        } ]",
                  "      }",
                  "    },",
                  "    \"reward\" : {",
                  "      \"type\" : \"string\",",
                  "      \"id\" : null,",
                  "      \"value\" : \"integer\",",
                  "      \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : \"array\"",
                  "        } ]",
                  "    }",
                  "  },",
                  "  \"startDate\" : \"date\",",
                  "  \"endDate\" : \"date\",",
                  "  \"budgetId\" : \"string\",",
                  "  \"familyCode\" : \"string\",",
                  "  \"gs1Databar\" : \"string\"",
                  "  ",
                  "}",
                  "",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"ClipCondition\"\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "8f3587ef-72e6-48aa-99f7-e0dd990e8a69",
          "name": "Add Campaign to the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "132bc4c7-57d1-4f5e-88aa-34137ee46f9e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "pm.environment.set(\"camp_id\", testObject.id);",
                  "const promo_id = pm.environment.get(\"promo_id\");",
                  "",
                  "//const camp_id = testObject.id;",
                  "",
                  "pm.test(\"Promo contains campaign Id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthid = id.length > 0;",
                  "    pm.expect(lengthid).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains clipByDate\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const isADate = Object.prototype.toString.call(clipByDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "/*pm.test(\"Is clip date before end date in promotion\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const clipDateBeforeEnd = clipByDate.getTime() <= endDate.getTime();",
                  "    pm.expect(clipDateBeforeEnd).to.eql(true);",
                  "});*/",
                  "",
                  "pm.test(\"Promotion Id check\", function () {",
                  "    //const equalId = Object.prototype.toString.call(promotionId) === promo_id;",
                  "  //  pm.expect(testObject.promotionId === promo_id).to.eql(true);",
                  " pm.expect(testObject.promotionId).to.eql(promo_id);",
                  " //pm.expect(testObject).to.have.property('id', promo_id);",
                  "});",
                  "",
                  "",
                  "",
                  "pm.test(\"Promo contains modifiedBy\", function() {",
                  "    const modifiedBy = testObject.modifiedBy;",
                  "    const lengthmodifiedBy = modifiedBy.length > 0;",
                  "    pm.expect(lengthmodifiedBy).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedOn\", function() {",
                  "    const modifiedOnRaw = testObject.modifiedOn;",
                  "    const modifiedOn = new Date(modifiedOnRaw*1000);",
                  "    const isADate =  Object.prototype.toString.call(modifiedOn) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains status\", function() {",
                  "    const status = testObject.status;",
                  "    const lengthstatus = status.length > 0;",
                  "    pm.expect(lengthstatus).to.eql(true);",
                  "});",
                  "",
                  "var schema = {",
                  "  \"clipByDate\": \"date\",",
                  "  \"endDate\": \"date\",",
                  "  \"id\": \"string\",",
                  "  \"modifiedBy\": \"string\",",
                  "  \"modifiedOn\": 0,",
                  "  \"overrides\": {",
                  "    \"details\": \"string\",",
                  "    \"images\": \"array\",",
                  "    \"rule\": {",
                  "      \"id\": 0",
                  "    },",
                  "    \"text\": \"string\",",
                  "    \"title\": \"string\"",
                  "  },",
                  "  \"promotionId\": \"string\",",
                  "  \"retailerProfileId\": \"string\",",
                  "  \"startDate\": \"date\",",
                  "  \"status\": \"string\",",
                  "  \"timezone\": \"string\"",
                  "}",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"clipByDate\": \"2019-01-01T14:00:00\",\n \"endDate\": \"2019-01-01T14:00:00\",\n \"overrides\": {\n   \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n   \"images\": [\n     \"Gain laundry detergent/5b6b6bd4d12f8512623c2e8b.png\"\n   ],\n   \"rule\": {\n     \"id\": 0,\"type\": \"SingleRule\"\n   },\n   \"text\": \"Get $0.50 OFF Gain\",\n   \"title\": \"When buy Two Gain laundry detergent\"\n },\n \"retailerProfileId\": \"3\",\n \"startDate\": \"2019-01-01T14:00:00\"\n   }"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/"
          },
          "response": []
        },
        {
          "_postman_id": "3ac4ac2f-c5de-45b3-bc29-37826b4a303b",
          "name": "Publish Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "26b4439d-17c8-4f03-afa1-383c40edd6fb",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
                  "});",
                  "",
                  "pm.test(\"Promo is DRAFT or ACTIVE\", function() {",
                  "    pm.expect(testObject.status === \"DRAFT\" || \"ACTIVE\").to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo is not paused\", function() {",
                  "    pm.expect(testObject.status === \"NULL\" || false).to.eql(true);",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "23bef111-4e63-41e1-acf6-9b2754add19c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Promo is DRAFT or ACTIVE\", function() {",
                  "    pm.expect(testObject.status === \"DRAFT\" || \"ACTIVE\").to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo is not paused\", function() {",
                  "    pm.expect(testObject.status === \"NULL\" || false).to.eql(true);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"campaignIds\": [\r\n\t\"{{camp_id}}\"\r\n   ]\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/publish/",
            "description": "Publish Promotion"
          },
          "response": []
        },
        {
          "_postman_id": "1cf5c848-b348-4ef2-aa2f-07904873756f",
          "name": "Get  List Promotions",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "078e5dc0-d930-4b12-a662-044f3692817f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "const response_json = pm.response.json();",
                  "pm.environment.set(\"promo_id\", response_json.items[0].id);",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions"
          },
          "response": []
        },
        {
          "_postman_id": "539698da-b383-479f-a313-92f34568ef8c",
          "name": "Get  Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab9fb098-b03e-4350-9e06-5468a36fff5b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthId = id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedBy\", function() {",
                  "    const modifiedBy = testObject.modifiedBy;",
                  "    const lengthmodifiedBy = modifiedBy.length > 0;",
                  "    pm.expect(lengthmodifiedBy).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedOn\", function() {",
                  "    const modifiedOnRaw = testObject.modifiedOn;",
                  "    const modifiedOn = new Date(modifiedOnRaw*1000);",
                  "    const isADate =  Object.prototype.toString.call(modifiedOn) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains status\", function() {",
                  "    const status = testObject.status;",
                  "    const lengthstatus = status.length > 0;",
                  "    pm.expect(lengthstatus).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Is start date before end date in promotion\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const startDateBeforeEnd = startDate.getTime() < endDate.getTime();",
                  "    pm.expect(startDateBeforeEnd).to.eql(true);",
                  "});",
                  "",
                  "",
                  "",
                  "var schema = {",
                  "    \"items\": [{",
                  "        \"brands\": [{",
                  "            \"brand\": \"string\",",
                  "            \"products\": \"array\",",
                  "        }],",
                  "        \"budgetId\": \"string\",",
                  "        \"details\": \"string\",",
                  "        \"endDate\": \"date\",",
                  "        \"familyCode\": \"string\",",
                  "        \"gs1Databar\": \"string\",",
                  "        \"id\": \"string\",",
                  "        \"images\": \"array\",",
                  "        \"mfrId\": \"string\",",
                  "        \"modifiedBy\": \"string\",",
                  "        \"modifiedOn\": 0,",
                  "        \"providerData\": \"string\",",
                  "        \"providerPromotionCode\": \"string\",",
                  "        \"rule\": \"object\",",
                  "        \"startDate\": \"date\",",
                  "        \"status\": \"string\",",
                  "        \"text\": \"string\",",
                  "        \"timezone\": {",
                  "            \"id\": \"string\",",
                  "            \"rules\": {",
                  "                \"fixedOffset\": \"boolean\",",
                  "                \"transitionRules\": \"array\",",
                  "                \"transitions\": \"array\"",
                  "            }",
                  "        },",
                  "        \"title\": \"string\"",
                  "    }]",
                  "}",
                  "",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "    pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "7b6e79f8-d335-49cc-8e94-c0600d971b6e",
          "name": "Publish Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1e4da9d-da2b-4087-90b8-57ae3f085246",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "campaignIds",
                "value": "camp_id "
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"campaignIds\": [\r\n\t\"{{camp_id}}\"\r\n   ]\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/publish/",
            "description": "Publish Promotion"
          },
          "response": []
        },
        {
          "_postman_id": "5460af8f-223e-49d9-b5da-d54143826bff",
          "name": "Create/update campaigns in bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b6fc135f-d459-432e-a199-690fba278912",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201,202,204]);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"items\": [\n     {\n \"clipByDate\": \"2019-01-01T14:00:00\",\n \"endDate\": \"2019-01-01T14:00:00\",\n \"id\": \"{{camp_id}}\",\n \"overrides\": {\n   \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n   \"images\": [\n     \"Gain laundry detergent/5b6b6bd4d12f8512623c2e8b.png\"\n   ],\n   \"rule\": {\n     \"id\": 0,\n     \"type\": \"SingleRule\"\n   },\n   \"text\": \"Get $0.50 OFF Gain\",\n   \"title\": \"When buy Two Gain laundry detergent\"\n },\n \"retailerProfileId\": \"3\",\n \"startDate\": \"2019-01-01T14:00:00\"\n   }\n ]\n}\n\n"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/bulk/campaigns/update"
          },
          "response": []
        },
        {
          "_postman_id": "e40d3b93-85d9-47d5-91ad-c652dab39700",
          "name": "Publish Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ac134f37-3dd1-4247-9493-d0d02dcaf74d",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201,202,204]);",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "08040ef1-4b96-4f9a-98dd-833bce277d7a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/publish/",
            "description": "Publish Campaign"
          },
          "response": []
        },
        {
          "_postman_id": "91b21d2d-b5c6-4296-a02c-acff7df45d26",
          "name": "Update promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b0d15164-3693-4876-8d9d-e2293e7345fc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240\",\r\n  \"text\" : \"50 OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"ClipCondition\"\r\n      }\r\n    ,\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [\"12\"]\r\n      }]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}",
            "description": "Modify a promotion"
          },
          "response": []
        },
        {
          "_postman_id": "4d4e0849-29ae-497c-9ad5-24d359acfdb4",
          "name": "Get  Campaigns for promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a3bf5b0d-99b5-4656-9cbe-1d055ac4eccc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "",
                "value": "",
                "disabled": true
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/"
          },
          "response": []
        },
        {
          "_postman_id": "c2150f87-38c3-46e6-87e3-0c0f71aa70fc",
          "name": "Get Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d000a137-8460-4901-bee1-2f1685940188",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "d2ae8013-7098-4eca-a00e-819e65556af6",
          "name": "Get Campaign (no promo id)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "18e6bb0b-0c42-4919-b6de-5d5bd14e6a64",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/campaigns/{{camp_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "7f164eea-5019-4945-9e74-03362749c722",
          "name": "Update Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "34593ce3-a934-4416-8a3e-449b9795cf8d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"clipByDate\": \"2019-01-30T14:00:00\",\r\n      \"endDate\": \"2019-01-30T14:00:00\",\r\n           \"overrides\": {\r\n        \"details\": \"Detail345345s\",\r\n        \"images\": [\r\n          \"Cascadian/5b3e9e81d12f85041119ea09.png\"\r\n        ],\r\n        \"rule\": {\r\n          \"id\": 0,\"type\": \"SingleRule\"\r\n        },\r\n        \"text\": \"text\",\r\n        \"title\": \"title\"\r\n      },\r\n      \"retailerProfileId\": \"1\",\r\n      \"startDate\": \"2019-01-01T14:00:00\"\r\n      \r\n     \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}",
            "description": "Update Campaign"
          },
          "response": []
        },
        {
          "_postman_id": "89ce9041-b478-4270-a790-c9891ef0636a",
          "name": "Accept changes for Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61fe0d87-237d-476d-8356-687ed622172b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/accept_changes"
          },
          "response": []
        },
        {
          "_postman_id": "43f462b0-dfb7-4caa-b072-fe59cb5a9f96",
          "name": "Pause Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52a9e167-24a4-4de6-a0ce-a06d69d58ab0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/pause"
          },
          "response": []
        },
        {
          "_postman_id": "793cfd1d-c90e-4854-8607-18cf6cca4bb0",
          "name": "Delte campaigns in bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bf780fb1-77d5-49bd-9225-68940b6400fe",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"items\": [\n    {\n      \"clipByDate\": \"2018-08-13T19:35:08.181Z\",\n      \"endDate\": \"2018-08-13T19:35:08.181Z\",\n      \"id\": \"string\",\n      \"overrides\": {\n        \"details\": \"string\",\n        \"images\": [\n          \"string\"\n        ],\n        \"rule\": {\n          \"id\": 0\n        },\n        \"text\": \"string\",\n        \"title\": \"string\"\n      },\n      \"retailerProfileId\": \"string\",\n      \"startDate\": \"2018-08-13T19:35:08.181Z\",\n      \"timezone\": \"string\"\n    }\n  ]\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/bulk/campaigns/delete"
          },
          "response": []
        },
        {
          "_postman_id": "994f08f5-a9f5-4f47-9bf0-8b90c8b79c81",
          "name": "Reject changes for Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e83cb239-9fdb-4047-ba38-6a473311b289",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/reject"
          },
          "response": []
        },
        {
          "_postman_id": "61e8c8a8-9df7-4f90-bfde-271adb192905",
          "name": "Void the Campaign ",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "87715677-afa7-4ebd-8338-31e649d97a4e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/void"
          },
          "response": []
        },
        {
          "_postman_id": "b61aa606-08de-4aa9-aed4-346dd0d35194",
          "name": "Resume Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "321bc7ad-aabb-4d39-a579-a3ba6ab10757",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/un-pause"
          },
          "response": []
        },
        {
          "_postman_id": "06f35b1a-9dff-498a-b10c-05d095c14d2b",
          "name": "Pause the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3e0a9575-aba0-4308-94d0-5eafa9f7f2f5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/pause"
          },
          "response": []
        },
        {
          "_postman_id": "f2bd7fd6-8dd8-48f2-a7e8-d6fd81f72a15",
          "name": "Disable the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11ef313c-a4b4-4d36-8d3d-76054e612999",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/status/void"
          },
          "response": []
        },
        {
          "_postman_id": "edec50a9-4c19-421c-bd18-b212517e61c6",
          "name": "Resume the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "076832e4-40d2-4101-8613-67056822c7c8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/un-pause"
          },
          "response": []
        },
        {
          "_postman_id": "b43a8c43-a6ec-48dd-87c8-6010b0b8647e",
          "name": "Delete Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7bd7e90c-2ea8-4950-b02a-41cfba837082",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "d9215606-d83f-47cd-8b5b-f75e5a39f456",
          "name": "Delete prom",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "90dba702-ba8e-4c5b-acaa-d7b1d4738afb",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "pm.globals.unset(\"id\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "cc2cfd30-dc91-46a6-851f-e20285676066",
      "name": "Post promotion requests",
      "description": "Post promotion request (no matter type)",
      "item": [
        {
          "_postman_id": "2c40c446-ba7e-4854-93d3-96a4178d7be6",
          "name": "Post promotion (Cents OFF)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ede19e00-4e55-430a-8739-2f6e6a49d794",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "",
                  "",
                  "",
                  "//pm.globals.set(\"promo_id\", jsonData.id);",
                  "",
                  "",
                  "pm.test(\"Promo_id\",  function () {",
                  "    promo_id=jsonData.id;",
                  "   console.log(\"Our promo id\", promo_id);",
                  "});",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"075609195594\", \"075609195358\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "ee7f4250-09ea-46dd-863d-e18443dfd574",
          "name": "Post promotion BXGY",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c1533eb7-e53f-4317-ba8a-68a4ae38bf35",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "var jsonData = pm.response.json();",
                  "",
                  "pm.globals.set(\"id\", jsonData.id);",
                  "",
                  "",
                  "",
                  "pm.test(\"Promo_id\", function () {",
                  "    pm.expect(jsonData.id).to.eql(pm.globals.get(\"id\"))",
                  "});",
                  "",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get Two L\u00c4RABAR Apple Pie FREE\",\r\n  \"providerPromotionCode\" : \"110785 \",\r\n  \"text\" : \"When you buy Three L\u00c4RABAR Banana Bread\",\r\n  \"details\" : \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\r\n  \"images\" : [ \"larabar/5b3e9c79d12f85041119ea08.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 3,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"021908402529\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"L\u00c4RABAR\",\r\n          \"products\" : [ \"Banana Bread\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"021908423142\u00a0\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"L\u00c4RABAR\",\r\n          \"products\" : [ \"Apple Pie\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2019-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-31T14:00:00\",\r\n  \"budgetId\" : \"123\",\r\n  \"familyCode\" : \"620\",\r\n  \"gs1Databar\" : \"811010021908110785310011062090000\"\r\n  \r\n}"
            },
            "url": {
              "raw": "http://qa-apps.caligotech.com:8188/promotions?bxgy_id={{id}}",
              "protocol": "http",
              "host": [
                "qa-apps",
                "caligotech",
                "com"
              ],
              "port": "8188",
              "path": [
                "promotions"
              ],
              "query": [
                {
                  "key": "bxgy_id",
                  "value": "{{id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "2fc015a1-8213-4bd8-8ad4-8b309c6d7d48",
          "name": "Post promotion BXGX",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4629bd92-5429-4b6d-9f2c-2fe6d1a9d0da",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  " var jsonData = pm.response.json();",
                  "",
                  "",
                  "pm.globals.set(\"id\", jsonData.id);",
                  "pm.test(\"Promo_id\", function () {",
                  "    pm.expect(jsonData.id).to.eql(pm.globals.get(\"id\"))",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get ONE Cascadian Farm Cinnamon Crunch Cereal Free\",\r\n  \"providerPromotionCode\" : \"111307 \",\r\n  \"text\" : \"When you buy TWO Cinnamon Crunch Cereal\",\r\n  \"details\" : \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\r\n  \"images\" : [ \"Cascadian/5b3e9e81d12f85041119ea09.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\u00a0\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereald\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereal\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2019-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-31T14:00:00\",\r\n  \"budgetId\" : \"123\",\r\n  \"familyCode\" : \"411\",\r\n  \"gs1Databar\" : \"811010021908110785310011062090000\"\r\n  \r\n}"
            },
            "url": {
              "raw": "http://qa-apps.caligotech.com:8188/promotions?id={{id}}",
              "protocol": "http",
              "host": [
                "qa-apps",
                "caligotech",
                "com"
              ],
              "port": "8188",
              "path": [
                "promotions"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{id}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "d17c659a-79db-4472-a568-fa29759f7670",
          "name": "Post promotion Basket OFF",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d4a70c3-7a3e-4ab2-bce3-d44bda0f115c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  " var jsonData = pm.response.json();",
                  "",
                  "pm.globals.set(\"id\", jsonData.id);",
                  "",
                  "pm.test(\"Promo_id\", function () {",
                  "    pm.expect(jsonData.id).to.eql(pm.globals.get(\"id\"))",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotion/5b61e579d12f8512623c2e7a.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2019-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"familyCode\",\r\n  \"gs1Databar\" : \"gs1Databar\"\r\n  \r\n}"
            },
            "url": {
              "raw": "http://qa-apps.caligotech.com:8188/promotions?id={{id}}",
              "protocol": "http",
              "host": [
                "qa-apps",
                "caligotech",
                "com"
              ],
              "port": "8188",
              "path": [
                "promotions"
              ],
              "query": [
                {
                  "key": "id",
                  "value": "{{id}}",
                  "equals": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "_postman_id": "a6f46c39-7467-47a3-b058-2bab2b54dc5e",
          "name": "Post Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7f37e914-21b9-44a1-8223-9591413fa989",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "const promotion = pm.response.json();",
                  "pm.globals.set(\"promo_id\", promotion.id);",
                  "postman.setNextRequest('Get Promotion');",
                  "// tests from get promotion - validation."
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"075609195594\", \"075609195358\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions"
          },
          "response": []
        }
      ],
      "event": [
        {
          "listen": "prerequest",
          "script": {
            "id": "a85d9486-b767-4a92-a60b-d09521093be5",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        },
        {
          "listen": "test",
          "script": {
            "id": "0fb6dbd6-6ba5-470b-892d-3294274883fc",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "var jsonData = pm.response.json();",
              "",
              "",
              "",
              "//pm.globals.set(\"promo_id\", jsonData.id);",
              "",
              "",
              "pm.test(\"Promo_id\",  function () {",
              "    promo_id=jsonData.id;",
              "   console.log(\"Our promo id\", promo_id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "_postman_id": "afedd458-1a75-45f8-a854-f716e8a9ad97",
      "name": "POST requests",
      "description": null,
      "item": [
        {
          "_postman_id": "9fabdb95-77c7-4140-a7d4-fc2d85e3f7f8",
          "name": "Post promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1422a73c-4319-4f86-b97e-f04180d7f535",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "const promo_id = testObject.id;",
                  "",
                  "pm.test(\"Id check\", function () {",
                  "    pm.expect(testObject.id).to.eql(promo_id);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "var schema = {",
                  "  \"title\" : \"string\",",
                  "  \"providerPromotionCode\" : \"string\",",
                  "  \"text\" : \"string\",",
                  "  \"details\" : \"string\",",
                  "  \"images\" :\"array\",",
                  "  \"rule\" : {",
                  "    \"id\" : null,",
                  "    \"type\" : \"string\",",
                  "    \"condition\" : {",
                  "      \"id\" : null,",
                  "      \"type\" : \"string\",",
                  "      \"mpr\" : 1,",
                  "      \"product\" : {",
                  "        \"upcs\" : \"array\",",
                  "        \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : [ \"string\" ]",
                  "        } ]",
                  "      }",
                  "    },",
                  "    \"reward\" : {",
                  "      \"type\" : \"string\",",
                  "      \"id\" : null,",
                  "      \"value\" : \"integer\",",
                  "      \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : \"array\"",
                  "        } ]",
                  "    }",
                  "  },",
                  "  \"startDate\" : \"date\",",
                  "  \"endDate\" : \"date\",",
                  "  \"budgetId\" : \"string\",",
                  "  \"familyCode\" : \"string\",",
                  "  \"gs1Databar\" : \"string\"",
                  "  ",
                  "}",
                  "",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"075609195594\", \"075609195358\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "7ec01e68-839d-4887-aa0c-9fb8ce822699",
          "name": "Create/update campaigns in bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "490307bb-4a07-4987-bfa6-d031838caf99",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201,202,204]);",
                  "});",
                  "",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"items\": [\n     {\n \"clipByDate\": \"2019-01-01T14:00:00\",\n \"endDate\": \"2019-01-01T14:00:00\",\n \"overrides\": {\n   \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n   \"images\": [\n     \"Gain laundry detergent/5b6b6bd4d12f8512623c2e8b.png\"\n   ],\n   \"rule\": {\n     \"id\": 0,\"type\": \"SingleRule\"\n   },\n   \"text\": \"Get $0.50 OFF Gain\",\n   \"title\": \"When buy Two Gain laundry detergent\"\n },\n \"retailerProfileId\": \"3\",\n \"startDate\": \"2019-01-01T14:00:00\"\n   }\n ]\n}\n\n"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/bulk/campaigns/update"
          },
          "response": []
        },
        {
          "_postman_id": "af66408b-231d-4abf-8ae2-8277a395af22",
          "name": "Update Campaigns in bulk",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "bbc7b773-1580-4c73-a3a8-ccb35f30529d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"items\": [\r\n    {\r\n      \"clipByDate\": \"2018-01-31T14:00:00\",\r\n      \"endDate\": \"2018-01-31T14:00:00\",\r\n      \"id\": \"5b4e5313d12f8521c2dedfcd\",\r\n      \"overrides\": {\r\n        \"details\": \"Details\",\r\n        \"images\": [\r\n          \"Cascadian/5b3e9e81d12f85041119ea09.png\"\r\n        ],\r\n        \"rule\": {\r\n          \"id\": 0,\"type\":\"SingleRule\"\r\n        },\r\n        \"text\": \"text\",\r\n        \"title\": \"title\"\r\n      },\r\n      \"retailerProfileId\": \"1\",\r\n      \"startDate\": \"2018-01-01T14:00:00\"\r\n    }\r\n  ]\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/5b47d6fed12f8501f57ed7a4/bulk/campaigns/update"
          },
          "response": []
        },
        {
          "_postman_id": "65e0fded-baff-433a-bcfa-959cdf91a666",
          "name": "Add Campaign to the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a15269c2-14da-4f33-b4b0-557be9616aae",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "pm.environment.set(\"camp_id\", testObject.id);",
                  "",
                  "//const camp_id = testObject.id;",
                  "",
                  "pm.test(\"Promo contains campaign Id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthid = id.length > 0;",
                  "    pm.expect(lengthid).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains clipByDate\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const isADate = Object.prototype.toString.call(clipByDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "/*pm.test(\"Is clip date before end date in promotion\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const clipDateBeforeEnd = clipByDate.getTime() <= endDate.getTime();",
                  "    pm.expect(clipDateBeforeEnd).to.eql(true);",
                  "});*/",
                  "",
                  "pm.test(\"Promotion Id check\", function () {",
                  "    pm.expect(testObject.promotionId).to.eql(promo_id);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Promo contains modifiedBy\", function() {",
                  "    const modifiedBy = testObject.modifiedBy;",
                  "    const lengthmodifiedBy = modifiedBy.length > 0;",
                  "    pm.expect(lengthmodifiedBy).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedOn\", function() {",
                  "    const modifiedOnRaw = testObject.modifiedOn;",
                  "    const modifiedOn = new Date(modifiedOnRaw*1000);",
                  "    const isADate =  Object.prototype.toString.call(modifiedOn) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains status\", function() {",
                  "    const status = testObject.status;",
                  "    const lengthstatus = status.length > 0;",
                  "    pm.expect(lengthstatus).to.eql(true);",
                  "});",
                  "",
                  "var schema = {",
                  "  \"clipByDate\": \"date\",",
                  "  \"endDate\": \"date\",",
                  "  \"id\": \"string\",",
                  "  \"modifiedBy\": \"string\",",
                  "  \"modifiedOn\": 0,",
                  "  \"overrides\": {",
                  "    \"details\": \"string\",",
                  "    \"images\": \"array\",",
                  "    \"rule\": {",
                  "      \"id\": 0",
                  "    },",
                  "    \"text\": \"string\",",
                  "    \"title\": \"string\"",
                  "  },",
                  "  \"promotionId\": \"string\",",
                  "  \"retailerProfileId\": \"string\",",
                  "  \"startDate\": \"date\",",
                  "  \"status\": \"string\",",
                  "  \"timezone\": \"string\"",
                  "}",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"clipByDate\": \"2019-01-01T14:00:00\",\n \"endDate\": \"2019-01-01T14:00:00\",\n \"overrides\": {\n   \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n   \"images\": [\n     \"Gain laundry detergent/5b6b6bd4d12f8512623c2e8b.png\"\n   ],\n   \"rule\": {\n     \"id\": 0,\"type\": \"SingleRule\"\n   },\n   \"text\": \"Get $0.50 OFF Gain\",\n   \"title\": \"When buy Two Gain laundry detergent\"\n },\n \"retailerProfileId\": \"3\",\n \"startDate\": \"2019-01-01T14:00:00\"\n   }"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/"
          },
          "response": []
        },
        {
          "_postman_id": "49729599-d9f5-4ec5-9345-a3cf1f488893",
          "name": "Accept changes for Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "61fe0d87-237d-476d-8356-687ed622172b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/accept_changes"
          },
          "response": []
        },
        {
          "_postman_id": "86f3d71f-a5d1-4d88-924e-463639f47080",
          "name": "Pause Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "52a9e167-24a4-4de6-a0ce-a06d69d58ab0",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/pause"
          },
          "response": []
        },
        {
          "_postman_id": "bdcaec3f-aeca-4692-b25f-05582177d4bb",
          "name": "Publish Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ac134f37-3dd1-4247-9493-d0d02dcaf74d",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([201,202,204]);",
                  "});"
                ]
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "08040ef1-4b96-4f9a-98dd-833bce277d7a",
                "type": "text/javascript",
                "exec": [
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/publish/",
            "description": "Publish Campaign"
          },
          "response": []
        },
        {
          "_postman_id": "d3f1792c-9147-4421-8909-1e1da8a67184",
          "name": "Reject changes for Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e83cb239-9fdb-4047-ba38-6a473311b289",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/reject"
          },
          "response": []
        },
        {
          "_postman_id": "2d75db7c-13c8-48d5-8e9a-1c2539540ac3",
          "name": "Resume Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "321bc7ad-aabb-4d39-a579-a3ba6ab10757",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/un-pause"
          },
          "response": []
        },
        {
          "_postman_id": "6239b7e4-ec73-4993-aecd-a22a873dd88a",
          "name": "Void the Campaign ",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "87715677-afa7-4ebd-8338-31e649d97a4e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}/void"
          },
          "response": []
        },
        {
          "_postman_id": "2a292d68-4552-49fb-88cf-0a73acd14b6e",
          "name": "Pause the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3e0a9575-aba0-4308-94d0-5eafa9f7f2f5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/pause"
          },
          "response": []
        },
        {
          "_postman_id": "a2426311-8a96-4c22-99cd-7f8fde42ac82",
          "name": "Publish Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a1e4da9d-da2b-4087-90b8-57ae3f085246",
                "type": "text/javascript",
                "exec": [
                  "",
                  "pm.test(\"Successful POST request\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200,201,202,204]);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "campaignIds",
                "value": "camp_id "
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"campaignIds\": [\r\n\t\"{{camp_id}}\"\r\n   ]\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/publish/"
          },
          "response": []
        },
        {
          "_postman_id": "8cb05e45-4663-4c97-a242-df238ce75d81",
          "name": "Disable the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "11ef313c-a4b4-4d36-8d3d-76054e612999",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/status/void"
          },
          "response": []
        },
        {
          "_postman_id": "01cd8ed9-62c4-4d9e-bcff-545d9d6fb7ab",
          "name": "Resume the Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "076832e4-40d2-4101-8613-67056822c7c8",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/un-pause"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "c43efc90-c333-4d29-9367-6339d3f2512d",
      "name": "GET requests",
      "description": null,
      "item": [
        {
          "_postman_id": "a8edddcd-a787-4b42-9f49-5d6a7cc20267",
          "name": "Get  Promotions",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c0a25675-772b-49b5-8864-b9858cad1c5f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "75fa2f33-a6d0-459f-bfc7-949aeb7f8814",
          "name": "Get  Promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ab9fb098-b03e-4350-9e06-5468a36fff5b",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function() {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthId = id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedBy\", function() {",
                  "    const modifiedBy = testObject.modifiedBy;",
                  "    const lengthmodifiedBy = modifiedBy.length > 0;",
                  "    pm.expect(lengthmodifiedBy).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedOn\", function() {",
                  "    const modifiedOnRaw = testObject.modifiedOn;",
                  "    const modifiedOn = new Date(modifiedOnRaw*1000);",
                  "    const isADate =  Object.prototype.toString.call(modifiedOn) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains status\", function() {",
                  "    const status = testObject.status;",
                  "    const lengthstatus = status.length > 0;",
                  "    pm.expect(lengthstatus).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Is start date before end date in promotion\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const startDateBeforeEnd = startDate.getTime() < endDate.getTime();",
                  "    pm.expect(startDateBeforeEnd).to.eql(true);",
                  "});",
                  "",
                  "",
                  "",
                  "var schema = {",
                  "    \"items\": [{",
                  "        \"brands\": [{",
                  "            \"brand\": \"string\",",
                  "            \"products\": \"array\",",
                  "        }],",
                  "        \"budgetId\": \"string\",",
                  "        \"details\": \"string\",",
                  "        \"endDate\": \"date\",",
                  "        \"familyCode\": \"string\",",
                  "        \"gs1Databar\": \"string\",",
                  "        \"id\": \"string\",",
                  "        \"images\": \"array\",",
                  "        \"mfrId\": \"string\",",
                  "        \"modifiedBy\": \"string\",",
                  "        \"modifiedOn\": 0,",
                  "        \"providerData\": \"string\",",
                  "        \"providerPromotionCode\": \"string\",",
                  "        \"rule\": \"object\",",
                  "        \"startDate\": \"date\",",
                  "        \"status\": \"string\",",
                  "        \"text\": \"string\",",
                  "        \"timezone\": {",
                  "            \"id\": \"string\",",
                  "            \"rules\": {",
                  "                \"fixedOffset\": \"boolean\",",
                  "                \"transitionRules\": \"array\",",
                  "                \"transitions\": \"array\"",
                  "            }",
                  "        },",
                  "        \"title\": \"string\"",
                  "    }]",
                  "}",
                  "",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "    pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "b84ae0a8-c797-408e-a4e8-827b58144ea4",
          "name": "Get  Campaigns for promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a3bf5b0d-99b5-4656-9cbe-1d055ac4eccc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/"
          },
          "response": []
        },
        {
          "_postman_id": "f0c0172e-a584-469c-ae57-972b2bf50b3b",
          "name": "Get Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d000a137-8460-4901-bee1-2f1685940188",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "08bfa72a-8ffe-4173-8f66-5ecd29eb999a",
          "name": "Get Campaign (no promo id)",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "18e6bb0b-0c42-4919-b6de-5d5bd14e6a64",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/campaigns/{{camp_id}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "9ae39cb9-b6c4-4457-bb3e-3a217442db81",
      "name": "DELETE requests",
      "description": null,
      "item": [
        {
          "_postman_id": "6e153d83-764b-4fe1-9b8e-e245871e80d9",
          "name": "Delete prom",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4f8de77f-4cb7-473e-b235-f27ff0ea3d23",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 204\", function () {",
                  "    pm.response.to.have.status(204);",
                  "});",
                  "",
                  "pm.globals.unset(\"promo_id\");",
                  ""
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
          },
          "response": []
        },
        {
          "_postman_id": "d12358a5-4d78-40b4-9b21-4ee6e3f466b8",
          "name": "Delete Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7bd7e90c-2ea8-4950-b02a-41cfba837082",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "ed92d46c-fd95-462f-90df-d3a52e730633",
      "name": "UPDATE requests",
      "description": null,
      "item": [
        {
          "_postman_id": "897a8987-e61d-47a7-8f10-d558e3e449ba",
          "name": "Update promotion",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get ONE Cascadian Farm Cinnamon Crunch Cereal Free\",\r\n  \"providerPromotionCode\" : \"111310 \",\r\n  \"text\" : \"When you buy TWO Cinnamon Crunch Cereal\",\r\n  \"details\" : \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\r\n  \"images\" : [ \"Cascadian/5b3e9e81d12f85041119ea09.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\u00a0\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereald\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereal\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2019-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-01T14:00:00\",\r\n  \"budgetId\" : \"12345\",\r\n  \"familyCode\" : \"412\",\r\n  \"gs1Databar\" : \"811010021908110785310011062090000\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/5b47dbb2d12f8501f57ed7a5"
          },
          "response": []
        },
        {
          "_postman_id": "1ec2d322-a0df-43fe-8dff-4686760eb475",
          "name": "Update Campaign",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "34593ce3-a934-4416-8a3e-449b9795cf8d",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"clipByDate\": \"2019-01-30T14:00:00\",\r\n      \"endDate\": \"2019-01-30T14:00:00\",\r\n           \"overrides\": {\r\n        \"details\": \"Details\",\r\n        \"images\": [\r\n          \"Cascadian/5b3e9e81d12f85041119ea09.png\"\r\n        ],\r\n        \"rule\": {\r\n          \"id\": 0,\"type\": \"SingleRule\"\r\n        },\r\n        \"text\": \"text\",\r\n        \"title\": \"title\"\r\n      },\r\n      \"retailerProfileId\": \"1\",\r\n      \"startDate\": \"2019-01-01T14:00:00\"\r\n      \r\n     \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/5b47dbb2d12f8501f57ed7a5/campaigns/5b47dc4dd12f8501f57ed7b2",
            "description": "Update Campaign"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "95ae5857-5c7f-4370-8d43-77cd3ed042b5",
      "name": "TC-1 Publish DRAFT promo with S campaign",
      "description": "Publish DRAFT promotion with single campaign ",
      "item": [
        {
          "_postman_id": "c679d652-1fb6-4941-a84d-7cde157a4f05",
          "name": "Post promotion",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e40e7e2e-bb37-4a87-b930-6340f3315838",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "//const promo_id = testObject.id;",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "/*pm.test(\"Id check\", function () {",
                  "    pm.expect(testObject.id).to.eql(promo_id);",
                  "});*/",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo is DRAFT or ACTIVE\", function() {",
                  "    pm.expect(testObject.status === \"DRAFT\" || \"ACTIVE\").to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo is not paused\", function() {",
                  "    pm.expect(testObject.status === \"NULL\" || false).to.eql(true);",
                  "});",
                  "",
                  "var schema = {",
                  "  \"title\" : \"string\",",
                  "  \"providerPromotionCode\" : \"string\",",
                  "  \"text\" : \"string\",",
                  "  \"details\" : \"string\",",
                  "  \"images\" :\"array\",",
                  "  \"rule\" : {",
                  "    \"id\" : null,",
                  "    \"type\" : \"string\",",
                  "    \"condition\" : {",
                  "      \"id\" : null,",
                  "      \"type\" : \"string\",",
                  "      \"mpr\" : 1,",
                  "      \"product\" : {",
                  "        \"upcs\" : \"array\",",
                  "        \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : [ \"string\" ]",
                  "        } ]",
                  "      }",
                  "    },",
                  "    \"reward\" : {",
                  "      \"type\" : \"string\",",
                  "      \"id\" : null,",
                  "      \"value\" : \"integer\",",
                  "      \"brands\" : [ {",
                  "          \"brand\" : \"string\",",
                  "          \"products\" : \"array\"",
                  "        } ]",
                  "    }",
                  "  },",
                  "  \"startDate\" : \"date\",",
                  "  \"endDate\" : \"date\",",
                  "  \"budgetId\" : \"string\",",
                  "  \"familyCode\" : \"string\",",
                  "  \"gs1Databar\" : \"string\"",
                  "  ",
                  "}",
                  "",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"TC 1-1 Buy 1 NV Crisps and get $1.00 off \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"16000430051\" ],\r\n        \"brands\" : [ ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\":\"DiscountValueReward\",\r\n            \"id\":null,\r\n            \"value\":100\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "8c65e122-bbca-420c-8c7b-c2edf080e1b2",
          "name": "Add Campaign to the Promotion Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "0577acfe-cd34-4a6a-bd44-15cb93c39d91",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "pm.environment.set(\"camp_id\", testObject.id);",
                  "const promo_id = pm.environment.get(\"promo_id\");",
                  "",
                  "//const camp_id = testObject.id;",
                  "",
                  "pm.test(\"Promo contains campaign Id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthid = id.length > 0;",
                  "    pm.expect(lengthid).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains clipByDate\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const isADate = Object.prototype.toString.call(clipByDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "/*pm.test(\"Is clip date before end date in promotion\", function() {",
                  "    const clipByDate = new Date(testObject.clipByDate);",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const clipDateBeforeEnd = clipByDate.getTime() <= endDate.getTime();",
                  "    pm.expect(clipDateBeforeEnd).to.eql(true);",
                  "});*/",
                  "",
                  "pm.test(\"Promotion Id check\", function () {",
                  "    //const equalId = Object.prototype.toString.call(promotionId) === promo_id;",
                  "  //  pm.expect(testObject.promotionId === promo_id).to.eql(true);",
                  " pm.expect(testObject.promotionId).to.eql(promo_id);",
                  " //pm.expect(testObject).to.have.property('id', promo_id);",
                  "});",
                  "",
                  "",
                  "//tests[\"Getting Violation Id\"] = testObject.promotionId === 5b84eda1d12f8534ebf7a2c3;",
                  "",
                  "pm.test(\"Promo contains modifiedBy\", function() {",
                  "    const modifiedBy = testObject.modifiedBy;",
                  "    const lengthmodifiedBy = modifiedBy.length > 0;",
                  "    pm.expect(lengthmodifiedBy).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains modifiedOn\", function() {",
                  "    const modifiedOnRaw = testObject.modifiedOn;",
                  "    const modifiedOn = new Date(modifiedOnRaw*1000);",
                  "    const isADate =  Object.prototype.toString.call(modifiedOn) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains status\", function() {",
                  "    const status = testObject.status;",
                  "    const lengthstatus = status.length > 0;",
                  "    pm.expect(lengthstatus).to.eql(true);",
                  "});",
                  "",
                  "var schema = {",
                  "  \"clipByDate\": \"date\",",
                  "  \"endDate\": \"date\",",
                  "  \"id\": \"string\",",
                  "  \"modifiedBy\": \"string\",",
                  "  \"modifiedOn\": 0,",
                  "  \"overrides\": {",
                  "    \"details\": \"string\",",
                  "    \"images\": \"array\",",
                  "    \"rule\": {",
                  "      \"id\": 0",
                  "    },",
                  "    \"text\": \"string\",",
                  "    \"title\": \"string\"",
                  "  },",
                  "  \"promotionId\": \"string\",",
                  "  \"retailerProfileId\": \"string\",",
                  "  \"startDate\": \"date\",",
                  "  \"status\": \"string\",",
                  "  \"timezone\": \"string\"",
                  "}",
                  "",
                  "pm.test('Schema is valid', function() {",
                  "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n \"clipByDate\": \"2019-01-01T14:00:00\",\n \"endDate\": \"2019-01-01T14:00:00\",\n \"overrides\": {\n   \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n   \"images\": [\n     \"Gain laundry detergent/5b6b6bd4d12f8512623c2e8b.png\"\n   ],\n   \"rule\": {\n     \"id\": 0,\"type\": \"SingleRule\"\n   },\n   \"text\": \"Get $0.50 OFF Gain\",\n   \"title\": \"When buy Two Gain laundry detergent\"\n },\n \"retailerProfileId\": \"3\",\n \"startDate\": \"2019-01-01T14:00:00\"\n   }"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/"
          },
          "response": []
        },
        {
          "_postman_id": "249a4aa9-c6ae-4bc8-b23c-1496d16fd53b",
          "name": "Publish Promotion Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "91debc3d-daea-4249-9ccf-95f3c6b518dd",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "",
                  "const testObject = pm.response.json();",
                  "pm.environment.set(\"camp_id\", testObject.id);",
                  "",
                  "const promo_id = pm.environment.get(\"promo_id\");",
                  "",
                  "pm.setNextRequest(\"Upload a file into dFS as form-data-multipart\");",
                  "pm.setNextRequest(\"Download a file from dFS as binary stream (octet-stream content type)\");",
                  "",
                  "const responseDrall = pm.response.json();",
                  "pm.test(\"After Drall check\", function () {",
                  "    pm.expect(responseDrall == testObject).to.eql(true);",
                  "});",
                  ""
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "campaignIds",
                "value": "camp_id "
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"campaignIds\": [\r\n\t\"{{camp_id}}\"\r\n   ]\r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/publish/",
            "description": "Publish Promotion"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "6025435c-1691-474a-8178-426527274230",
      "name": "Create different type promotion",
      "description": "",
      "item": [
        {
          "_postman_id": "f93b94ee-c02a-4cda-91e1-298addb4d712",
          "name": "Custom",
          "description": "",
          "item": [
            {
              "_postman_id": "34db83fc-8b9e-48b1-bb7f-247063a657e1",
              "name": "Rule Types",
              "description": "",
              "item": [
                {
                  "_postman_id": "7a410bcf-040a-44d0-956d-c0567a1da531",
                  "name": "PLAT-46:Verify Single rule fields",
                  "description": null,
                  "item": [
                    {
                      "_postman_id": "fb7b5e61-b242-4484-8170-a63826d2a4d1",
                      "name": "Step 1:Post promotion",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "const testObject = pm.response.json();",
                              "//const promo_id = testObject.id;",
                              "",
                              "pm.environment.set(\"promo_id\", testObject.id);",
                              "",
                              "",
                              "/*pm.test(\"Id check\", function () {",
                              "    pm.expect(testObject.id).to.eql(promo_id);",
                              "});*/",
                              "",
                              "pm.test(\"Promo contains Id\", function() {",
                              "    const Id = testObject.id;",
                              "    const lengthId = Id.length > 0;",
                              "    pm.expect(lengthId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains start date\", function() {",
                              "    const startDate = new Date(testObject.startDate);",
                              "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains end date\", function() {",
                              "    const endDate = new Date(testObject.endDate);",
                              "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains budgetId\", function() {",
                              "    const budgetId = testObject.budgetId;",
                              "    const lengthbudgetId = budgetId.length > 0;",
                              "    pm.expect(lengthbudgetId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                              "    const familyCode = testObject.familyCode;",
                              "    const lengthfamilyCode = familyCode.length == 3;",
                              "    pm.expect(lengthfamilyCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                              "    const gs1Databar = testObject.gs1Databar;",
                              "    const lengthgs1Databar = gs1Databar.length > 25;",
                              "    pm.expect(lengthgs1Databar).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains title\", function() {",
                              "    const title = testObject.title;",
                              "    const lengthTitle = title.length > 0;",
                              "    pm.expect(lengthTitle).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains text\", function() {",
                              "    const text = testObject.text;",
                              "    const lengthText = text.length > 0;",
                              "    pm.expect(lengthText).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains details\", function() {",
                              "    const details = testObject.details;",
                              "    const lengthDetails = details.length > 0;",
                              "    pm.expect(lengthDetails).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains promo code\", function() {",
                              "    const promoCode = testObject.providerPromotionCode;",
                              "    const lengthPromoCode = promoCode.length > 0;",
                              "    pm.expect(lengthPromoCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains images link\", function() {",
                              "    const images = testObject.images;",
                              "    const lengthimages = images.length > 0;",
                              "    pm.expect(lengthimages).to.eql(true);",
                              "});",
                              "",
                              "",
                              "",
                              "var schema = {",
                              "  \"title\" : \"string\",",
                              "  \"providerPromotionCode\" : \"string\",",
                              "  \"text\" : \"string\",",
                              "  \"details\" : \"string\",",
                              "  \"images\" :\"array\",",
                              "  \"rule\" : {",
                              "    \"id\" : null,",
                              "    \"type\" : \"string\",",
                              "    \"condition\" : {",
                              "      \"id\" : null,",
                              "      \"type\" : \"string\",",
                              "      \"mpr\" : 1,",
                              "      \"product\" : {",
                              "        \"upcs\" : \"array\",",
                              "        \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : [ \"string\" ]",
                              "        } ]",
                              "      }",
                              "    },",
                              "    \"reward\" : {",
                              "      \"type\" : \"string\",",
                              "      \"id\" : null,",
                              "      \"value\" : \"integer\",",
                              "      \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : \"array\"",
                              "        } ]",
                              "    }",
                              "  },",
                              "  \"startDate\" : \"date\",",
                              "  \"endDate\" : \"date\",",
                              "  \"budgetId\" : \"string\",",
                              "  \"familyCode\" : \"string\",",
                              "  \"gs1Databar\" : \"string\"",
                              "  ",
                              "}",
                              "",
                              "",
                              "pm.test('Schema is valid', function() {",
                              "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"WatchVideoCondition\",\r\n      \"url\" : \"www.youtube.com\"\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                        },
                        "url": "http://qa-apps.caligotech.com:8188/promotions/"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "eddfc97d-fd9a-404c-be60-f9279b440a4f",
              "name": "Condition Types",
              "description": "",
              "item": [
                {
                  "_postman_id": "b3e86ba7-fde8-4ece-9ef9-71065f8deccb",
                  "name": "PLAT-55:Verify ClipCondition",
                  "description": "",
                  "item": [
                    {
                      "_postman_id": "8b7dbd57-b7cf-4fc2-94ea-26f6d5031d95",
                      "name": "Step 1:Post promotion",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "const testObject = pm.response.json();",
                              "//const promo_id = testObject.id;",
                              "",
                              "pm.environment.set(\"promo_id\", testObject.id);",
                              "",
                              "",
                              "/*pm.test(\"Id check\", function () {",
                              "    pm.expect(testObject.id).to.eql(promo_id);",
                              "});*/",
                              "",
                              "pm.test(\"Promo contains Id\", function() {",
                              "    const Id = testObject.id;",
                              "    const lengthId = Id.length > 0;",
                              "    pm.expect(lengthId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains start date\", function() {",
                              "    const startDate = new Date(testObject.startDate);",
                              "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains end date\", function() {",
                              "    const endDate = new Date(testObject.endDate);",
                              "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains budgetId\", function() {",
                              "    const budgetId = testObject.budgetId;",
                              "    const lengthbudgetId = budgetId.length > 0;",
                              "    pm.expect(lengthbudgetId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                              "    const familyCode = testObject.familyCode;",
                              "    const lengthfamilyCode = familyCode.length == 3;",
                              "    pm.expect(lengthfamilyCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                              "    const gs1Databar = testObject.gs1Databar;",
                              "    const lengthgs1Databar = gs1Databar.length > 25;",
                              "    pm.expect(lengthgs1Databar).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains title\", function() {",
                              "    const title = testObject.title;",
                              "    const lengthTitle = title.length > 0;",
                              "    pm.expect(lengthTitle).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains text\", function() {",
                              "    const text = testObject.text;",
                              "    const lengthText = text.length > 0;",
                              "    pm.expect(lengthText).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains details\", function() {",
                              "    const details = testObject.details;",
                              "    const lengthDetails = details.length > 0;",
                              "    pm.expect(lengthDetails).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains promo code\", function() {",
                              "    const promoCode = testObject.providerPromotionCode;",
                              "    const lengthPromoCode = promoCode.length > 0;",
                              "    pm.expect(lengthPromoCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains images link\", function() {",
                              "    const images = testObject.images;",
                              "    const lengthimages = images.length > 0;",
                              "    pm.expect(lengthimages).to.eql(true);",
                              "});",
                              "",
                              "",
                              "",
                              "var schema = {",
                              "  \"title\" : \"string\",",
                              "  \"providerPromotionCode\" : \"string\",",
                              "  \"text\" : \"string\",",
                              "  \"details\" : \"string\",",
                              "  \"images\" :\"array\",",
                              "  \"rule\" : {",
                              "    \"id\" : null,",
                              "    \"type\" : \"string\",",
                              "    \"condition\" : {",
                              "      \"id\" : null,",
                              "      \"type\" : \"string\",",
                              "      \"mpr\" : 1,",
                              "      \"product\" : {",
                              "        \"upcs\" : \"array\",",
                              "        \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : [ \"string\" ]",
                              "        } ]",
                              "      }",
                              "    },",
                              "    \"reward\" : {",
                              "      \"type\" : \"string\",",
                              "      \"id\" : null,",
                              "      \"value\" : \"integer\",",
                              "      \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : \"array\"",
                              "        } ]",
                              "    }",
                              "  },",
                              "  \"startDate\" : \"date\",",
                              "  \"endDate\" : \"date\",",
                              "  \"budgetId\" : \"string\",",
                              "  \"familyCode\" : \"string\",",
                              "  \"gs1Databar\" : \"string\"",
                              "  ",
                              "}",
                              "",
                              "",
                              "pm.test('Schema is valid', function() {",
                              "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"ClipCondition\"\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                        },
                        "url": "http://qa-apps.caligotech.com:8188/promotions/"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                },
                {
                  "_postman_id": "c698749f-8788-4900-b020-cb25a6a334db",
                  "name": "PLAT-51:Verify WatchVideoCondition",
                  "description": null,
                  "item": [
                    {
                      "_postman_id": "8d568c25-caff-4c1b-bfd7-c320af9b1a49",
                      "name": "Step 1:Post promotion",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                            "type": "text/javascript",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "const testObject = pm.response.json();",
                              "//const promo_id = testObject.id;",
                              "",
                              "pm.environment.set(\"promo_id\", testObject.id);",
                              "",
                              "",
                              "/*pm.test(\"Id check\", function () {",
                              "    pm.expect(testObject.id).to.eql(promo_id);",
                              "});*/",
                              "",
                              "pm.test(\"Promo contains Id\", function() {",
                              "    const Id = testObject.id;",
                              "    const lengthId = Id.length > 0;",
                              "    pm.expect(lengthId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains start date\", function() {",
                              "    const startDate = new Date(testObject.startDate);",
                              "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains end date\", function() {",
                              "    const endDate = new Date(testObject.endDate);",
                              "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                              "    pm.expect(isADate).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains budgetId\", function() {",
                              "    const budgetId = testObject.budgetId;",
                              "    const lengthbudgetId = budgetId.length > 0;",
                              "    pm.expect(lengthbudgetId).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                              "    const familyCode = testObject.familyCode;",
                              "    const lengthfamilyCode = familyCode.length == 3;",
                              "    pm.expect(lengthfamilyCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                              "    const gs1Databar = testObject.gs1Databar;",
                              "    const lengthgs1Databar = gs1Databar.length > 25;",
                              "    pm.expect(lengthgs1Databar).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains title\", function() {",
                              "    const title = testObject.title;",
                              "    const lengthTitle = title.length > 0;",
                              "    pm.expect(lengthTitle).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains text\", function() {",
                              "    const text = testObject.text;",
                              "    const lengthText = text.length > 0;",
                              "    pm.expect(lengthText).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains details\", function() {",
                              "    const details = testObject.details;",
                              "    const lengthDetails = details.length > 0;",
                              "    pm.expect(lengthDetails).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains promo code\", function() {",
                              "    const promoCode = testObject.providerPromotionCode;",
                              "    const lengthPromoCode = promoCode.length > 0;",
                              "    pm.expect(lengthPromoCode).to.eql(true);",
                              "});",
                              "",
                              "pm.test(\"Promo contains images link\", function() {",
                              "    const images = testObject.images;",
                              "    const lengthimages = images.length > 0;",
                              "    pm.expect(lengthimages).to.eql(true);",
                              "});",
                              "",
                              "",
                              "",
                              "var schema = {",
                              "  \"title\" : \"string\",",
                              "  \"providerPromotionCode\" : \"string\",",
                              "  \"text\" : \"string\",",
                              "  \"details\" : \"string\",",
                              "  \"images\" :\"array\",",
                              "  \"rule\" : {",
                              "    \"id\" : null,",
                              "    \"type\" : \"string\",",
                              "    \"condition\" : {",
                              "      \"id\" : null,",
                              "      \"type\" : \"string\",",
                              "      \"mpr\" : 1,",
                              "      \"product\" : {",
                              "        \"upcs\" : \"array\",",
                              "        \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : [ \"string\" ]",
                              "        } ]",
                              "      }",
                              "    },",
                              "    \"reward\" : {",
                              "      \"type\" : \"string\",",
                              "      \"id\" : null,",
                              "      \"value\" : \"integer\",",
                              "      \"brands\" : [ {",
                              "          \"brand\" : \"string\",",
                              "          \"products\" : \"array\"",
                              "        } ]",
                              "    }",
                              "  },",
                              "  \"startDate\" : \"date\",",
                              "  \"endDate\" : \"date\",",
                              "  \"budgetId\" : \"string\",",
                              "  \"familyCode\" : \"string\",",
                              "  \"gs1Databar\" : \"string\"",
                              "  ",
                              "}",
                              "",
                              "",
                              "pm.test('Schema is valid', function() {",
                              "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                              "});"
                            ]
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          },
                          {
                            "key": "Accept",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"WatchVideoCondition\",\r\n      \"url\" : \"www.youtube.com\"\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                        },
                        "url": "http://qa-apps.caligotech.com:8188/promotions/"
                      },
                      "response": []
                    }
                  ],
                  "_postman_isSubFolder": true
                }
              ],
              "_postman_isSubFolder": true
            },
            {
              "_postman_id": "956f023f-744e-4530-9242-6a5683598246",
              "name": "Reward Types",
              "description": "",
              "item": [],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "12797f7f-1749-4bc3-a1c0-018114bf3e52",
          "name": "Cents Off",
          "description": null,
          "item": [
            {
              "_postman_id": "e07e6f34-eba2-45c2-a9e4-c94b6fff1394",
              "name": "PLAT-133:Verify Cents Off promotion can be created",
              "description": null,
              "item": [
                {
                  "_postman_id": "aa4db9d1-0ce0-4caa-999b-96926374bdf5",
                  "name": "Step 1:Post promotion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "const testObject = pm.response.json();",
                          "//const promo_id = testObject.id;",
                          "",
                          "pm.environment.set(\"promo_id\", testObject.id);",
                          "",
                          "",
                          "/*pm.test(\"Id check\", function () {",
                          "    pm.expect(testObject.id).to.eql(promo_id);",
                          "});*/",
                          "",
                          "pm.test(\"Promo contains Id\", function() {",
                          "    const Id = testObject.id;",
                          "    const lengthId = Id.length > 0;",
                          "    pm.expect(lengthId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains start date\", function() {",
                          "    const startDate = new Date(testObject.startDate);",
                          "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains end date\", function() {",
                          "    const endDate = new Date(testObject.endDate);",
                          "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains budgetId\", function() {",
                          "    const budgetId = testObject.budgetId;",
                          "    const lengthbudgetId = budgetId.length > 0;",
                          "    pm.expect(lengthbudgetId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                          "    const familyCode = testObject.familyCode;",
                          "    const lengthfamilyCode = familyCode.length == 3;",
                          "    pm.expect(lengthfamilyCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                          "    const gs1Databar = testObject.gs1Databar;",
                          "    const lengthgs1Databar = gs1Databar.length > 25;",
                          "    pm.expect(lengthgs1Databar).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains title\", function() {",
                          "    const title = testObject.title;",
                          "    const lengthTitle = title.length > 0;",
                          "    pm.expect(lengthTitle).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains text\", function() {",
                          "    const text = testObject.text;",
                          "    const lengthText = text.length > 0;",
                          "    pm.expect(lengthText).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains details\", function() {",
                          "    const details = testObject.details;",
                          "    const lengthDetails = details.length > 0;",
                          "    pm.expect(lengthDetails).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains promo code\", function() {",
                          "    const promoCode = testObject.providerPromotionCode;",
                          "    const lengthPromoCode = promoCode.length > 0;",
                          "    pm.expect(lengthPromoCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains images link\", function() {",
                          "    const images = testObject.images;",
                          "    const lengthimages = images.length > 0;",
                          "    pm.expect(lengthimages).to.eql(true);",
                          "});",
                          "",
                          "",
                          "",
                          "var schema = {",
                          "  \"title\" : \"string\",",
                          "  \"providerPromotionCode\" : \"string\",",
                          "  \"text\" : \"string\",",
                          "  \"details\" : \"string\",",
                          "  \"images\" :\"array\",",
                          "  \"rule\" : {",
                          "    \"id\" : null,",
                          "    \"type\" : \"string\",",
                          "    \"condition\" : {",
                          "      \"id\" : null,",
                          "      \"type\" : \"string\",",
                          "      \"mpr\" : 1,",
                          "      \"product\" : {",
                          "        \"upcs\" : \"array\",",
                          "        \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : [ \"string\" ]",
                          "        } ]",
                          "      }",
                          "    },",
                          "    \"reward\" : {",
                          "      \"type\" : \"string\",",
                          "      \"id\" : null,",
                          "      \"value\" : \"integer\",",
                          "      \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : \"array\"",
                          "        } ]",
                          "    }",
                          "  },",
                          "  \"startDate\" : \"date\",",
                          "  \"endDate\" : \"date\",",
                          "  \"budgetId\" : \"string\",",
                          "  \"familyCode\" : \"string\",",
                          "  \"gs1Databar\" : \"string\"",
                          "  ",
                          "}",
                          "",
                          "",
                          "pm.test('Schema is valid', function() {",
                          "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"type\": \"BuyProductCondition\",\r\n            \"id\": 1,\r\n            \"mpr\": 1,\r\n            \"product\": {\r\n                \"upcs\": [\"16000430051\"],\r\n                \"brands\": []\r\n            }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"DiscountValueReward\",\r\n      \"id\" : null,\r\n      \"value\" : 50,\r\n      \"brands\" : [ {\r\n          \"brand\" : \"1\",\r\n          \"products\" : [ \"12\" ]\r\n        } ]\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                    },
                    "url": "http://qa-apps.caligotech.com:8188/promotions/"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "459fdc17-2cbf-4f61-b72b-19b4ca322e2e",
          "name": "BXGX",
          "description": null,
          "item": [
            {
              "_postman_id": "aaea0315-ce04-49d9-b54f-8a92e4223d44",
              "name": "PLAT-134:Verify BXGX promotion can be created",
              "description": null,
              "item": [
                {
                  "_postman_id": "3deb8644-f4e5-484e-9a63-68336afb3836",
                  "name": "Step 1:Post promotion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "const testObject = pm.response.json();",
                          "//const promo_id = testObject.id;",
                          "",
                          "pm.environment.set(\"promo_id\", testObject.id);",
                          "",
                          "",
                          "/*pm.test(\"Id check\", function () {",
                          "    pm.expect(testObject.id).to.eql(promo_id);",
                          "});*/",
                          "",
                          "pm.test(\"Promo contains Id\", function() {",
                          "    const Id = testObject.id;",
                          "    const lengthId = Id.length > 0;",
                          "    pm.expect(lengthId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains start date\", function() {",
                          "    const startDate = new Date(testObject.startDate);",
                          "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains end date\", function() {",
                          "    const endDate = new Date(testObject.endDate);",
                          "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains budgetId\", function() {",
                          "    const budgetId = testObject.budgetId;",
                          "    const lengthbudgetId = budgetId.length > 0;",
                          "    pm.expect(lengthbudgetId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                          "    const familyCode = testObject.familyCode;",
                          "    const lengthfamilyCode = familyCode.length == 3;",
                          "    pm.expect(lengthfamilyCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                          "    const gs1Databar = testObject.gs1Databar;",
                          "    const lengthgs1Databar = gs1Databar.length > 25;",
                          "    pm.expect(lengthgs1Databar).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains title\", function() {",
                          "    const title = testObject.title;",
                          "    const lengthTitle = title.length > 0;",
                          "    pm.expect(lengthTitle).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains text\", function() {",
                          "    const text = testObject.text;",
                          "    const lengthText = text.length > 0;",
                          "    pm.expect(lengthText).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains details\", function() {",
                          "    const details = testObject.details;",
                          "    const lengthDetails = details.length > 0;",
                          "    pm.expect(lengthDetails).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains promo code\", function() {",
                          "    const promoCode = testObject.providerPromotionCode;",
                          "    const lengthPromoCode = promoCode.length > 0;",
                          "    pm.expect(lengthPromoCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains images link\", function() {",
                          "    const images = testObject.images;",
                          "    const lengthimages = images.length > 0;",
                          "    pm.expect(lengthimages).to.eql(true);",
                          "});",
                          "",
                          "",
                          "",
                          "var schema = {",
                          "  \"title\" : \"string\",",
                          "  \"providerPromotionCode\" : \"string\",",
                          "  \"text\" : \"string\",",
                          "  \"details\" : \"string\",",
                          "  \"images\" :\"array\",",
                          "  \"rule\" : {",
                          "    \"id\" : null,",
                          "    \"type\" : \"string\",",
                          "    \"condition\" : {",
                          "      \"id\" : null,",
                          "      \"type\" : \"string\",",
                          "      \"mpr\" : 1,",
                          "      \"product\" : {",
                          "        \"upcs\" : \"array\",",
                          "        \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : [ \"string\" ]",
                          "        } ]",
                          "      }",
                          "    },",
                          "    \"reward\" : {",
                          "      \"type\" : \"string\",",
                          "      \"id\" : null,",
                          "      \"value\" : \"integer\",",
                          "      \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : \"array\"",
                          "        } ]",
                          "    }",
                          "  },",
                          "  \"startDate\" : \"date\",",
                          "  \"endDate\" : \"date\",",
                          "  \"budgetId\" : \"string\",",
                          "  \"familyCode\" : \"string\",",
                          "  \"gs1Databar\" : \"string\"",
                          "  ",
                          "}",
                          "",
                          "",
                          "pm.test('Schema is valid', function() {",
                          "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"type\": \"BuyProductCondition\",\r\n            \"id\": 1,\r\n            \"mpr\": 1,\r\n            \"product\": {\r\n                \"upcs\": [\"16000430051\"],\r\n                \"brands\": []\r\n            }\r\n    },\r\n\"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\": null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ] }, \r\n        {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n}\r\n},\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                    },
                    "url": "http://qa-apps.caligotech.com:8188/promotions/"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "198cae47-139b-435e-bc76-47a43fcaad51",
          "name": "BXGY",
          "description": null,
          "item": [
            {
              "_postman_id": "d34f5d3e-ba95-4603-a8ab-b8812fd6268d",
              "name": "PLAT-135:Verify BXGY promotion can be created",
              "description": null,
              "item": [
                {
                  "_postman_id": "9cde1f9f-8cd1-465c-9bec-3fcfd1a084f6",
                  "name": "Step 1:Post promotion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "const testObject = pm.response.json();",
                          "//const promo_id = testObject.id;",
                          "",
                          "pm.environment.set(\"promo_id\", testObject.id);",
                          "",
                          "",
                          "/*pm.test(\"Id check\", function () {",
                          "    pm.expect(testObject.id).to.eql(promo_id);",
                          "});*/",
                          "",
                          "pm.test(\"Promo contains Id\", function() {",
                          "    const Id = testObject.id;",
                          "    const lengthId = Id.length > 0;",
                          "    pm.expect(lengthId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains start date\", function() {",
                          "    const startDate = new Date(testObject.startDate);",
                          "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains end date\", function() {",
                          "    const endDate = new Date(testObject.endDate);",
                          "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains budgetId\", function() {",
                          "    const budgetId = testObject.budgetId;",
                          "    const lengthbudgetId = budgetId.length > 0;",
                          "    pm.expect(lengthbudgetId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                          "    const familyCode = testObject.familyCode;",
                          "    const lengthfamilyCode = familyCode.length == 3;",
                          "    pm.expect(lengthfamilyCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                          "    const gs1Databar = testObject.gs1Databar;",
                          "    const lengthgs1Databar = gs1Databar.length > 25;",
                          "    pm.expect(lengthgs1Databar).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains title\", function() {",
                          "    const title = testObject.title;",
                          "    const lengthTitle = title.length > 0;",
                          "    pm.expect(lengthTitle).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains text\", function() {",
                          "    const text = testObject.text;",
                          "    const lengthText = text.length > 0;",
                          "    pm.expect(lengthText).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains details\", function() {",
                          "    const details = testObject.details;",
                          "    const lengthDetails = details.length > 0;",
                          "    pm.expect(lengthDetails).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains promo code\", function() {",
                          "    const promoCode = testObject.providerPromotionCode;",
                          "    const lengthPromoCode = promoCode.length > 0;",
                          "    pm.expect(lengthPromoCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains images link\", function() {",
                          "    const images = testObject.images;",
                          "    const lengthimages = images.length > 0;",
                          "    pm.expect(lengthimages).to.eql(true);",
                          "});",
                          "",
                          "",
                          "",
                          "var schema = {",
                          "  \"title\" : \"string\",",
                          "  \"providerPromotionCode\" : \"string\",",
                          "  \"text\" : \"string\",",
                          "  \"details\" : \"string\",",
                          "  \"images\" :\"array\",",
                          "  \"rule\" : {",
                          "    \"id\" : null,",
                          "    \"type\" : \"string\",",
                          "    \"condition\" : {",
                          "      \"id\" : null,",
                          "      \"type\" : \"string\",",
                          "      \"mpr\" : 1,",
                          "      \"product\" : {",
                          "        \"upcs\" : \"array\",",
                          "        \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : [ \"string\" ]",
                          "        } ]",
                          "      }",
                          "    },",
                          "    \"reward\" : {",
                          "      \"type\" : \"string\",",
                          "      \"id\" : null,",
                          "      \"value\" : \"integer\",",
                          "      \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : \"array\"",
                          "        } ]",
                          "    }",
                          "  },",
                          "  \"startDate\" : \"date\",",
                          "  \"endDate\" : \"date\",",
                          "  \"budgetId\" : \"string\",",
                          "  \"familyCode\" : \"string\",",
                          "  \"gs1Databar\" : \"string\"",
                          "  ",
                          "}",
                          "",
                          "",
                          "pm.test('Schema is valid', function() {",
                          "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"type\": \"BuyProductCondition\",\r\n            \"id\": 1,\r\n            \"mpr\": 1,\r\n            \"product\": {\r\n                \"upcs\": [\"16000430051\"],\r\n                \"brands\": []\r\n            }\r\n    },\r\n\"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\": null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ] }, \r\n        {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n}\r\n},\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                    },
                    "url": "http://qa-apps.caligotech.com:8188/promotions/"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        },
        {
          "_postman_id": "129cbc4c-b9b9-4d27-946c-6d5f4b7662ef",
          "name": "Basket Off",
          "description": null,
          "item": [
            {
              "_postman_id": "7a985e56-04fa-4bab-9f68-7f09503d68c7",
              "name": "PLAT-136:Verify Basket Off promotion can be created",
              "description": null,
              "item": [
                {
                  "_postman_id": "a6a29e5f-07e8-43e9-a988-50b8465a53e9",
                  "name": "Step 1:Post promotion",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "const testObject = pm.response.json();",
                          "//const promo_id = testObject.id;",
                          "",
                          "pm.environment.set(\"promo_id\", testObject.id);",
                          "",
                          "",
                          "/*pm.test(\"Id check\", function () {",
                          "    pm.expect(testObject.id).to.eql(promo_id);",
                          "});*/",
                          "",
                          "pm.test(\"Promo contains Id\", function() {",
                          "    const Id = testObject.id;",
                          "    const lengthId = Id.length > 0;",
                          "    pm.expect(lengthId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains start date\", function() {",
                          "    const startDate = new Date(testObject.startDate);",
                          "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains end date\", function() {",
                          "    const endDate = new Date(testObject.endDate);",
                          "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                          "    pm.expect(isADate).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains budgetId\", function() {",
                          "    const budgetId = testObject.budgetId;",
                          "    const lengthbudgetId = budgetId.length > 0;",
                          "    pm.expect(lengthbudgetId).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                          "    const familyCode = testObject.familyCode;",
                          "    const lengthfamilyCode = familyCode.length == 3;",
                          "    pm.expect(lengthfamilyCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                          "    const gs1Databar = testObject.gs1Databar;",
                          "    const lengthgs1Databar = gs1Databar.length > 25;",
                          "    pm.expect(lengthgs1Databar).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains title\", function() {",
                          "    const title = testObject.title;",
                          "    const lengthTitle = title.length > 0;",
                          "    pm.expect(lengthTitle).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains text\", function() {",
                          "    const text = testObject.text;",
                          "    const lengthText = text.length > 0;",
                          "    pm.expect(lengthText).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains details\", function() {",
                          "    const details = testObject.details;",
                          "    const lengthDetails = details.length > 0;",
                          "    pm.expect(lengthDetails).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains promo code\", function() {",
                          "    const promoCode = testObject.providerPromotionCode;",
                          "    const lengthPromoCode = promoCode.length > 0;",
                          "    pm.expect(lengthPromoCode).to.eql(true);",
                          "});",
                          "",
                          "pm.test(\"Promo contains images link\", function() {",
                          "    const images = testObject.images;",
                          "    const lengthimages = images.length > 0;",
                          "    pm.expect(lengthimages).to.eql(true);",
                          "});",
                          "",
                          "",
                          "",
                          "var schema = {",
                          "  \"title\" : \"string\",",
                          "  \"providerPromotionCode\" : \"string\",",
                          "  \"text\" : \"string\",",
                          "  \"details\" : \"string\",",
                          "  \"images\" :\"array\",",
                          "  \"rule\" : {",
                          "    \"id\" : null,",
                          "    \"type\" : \"string\",",
                          "    \"condition\" : {",
                          "      \"id\" : null,",
                          "      \"type\" : \"string\",",
                          "      \"mpr\" : 1,",
                          "      \"product\" : {",
                          "        \"upcs\" : \"array\",",
                          "        \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : [ \"string\" ]",
                          "        } ]",
                          "      }",
                          "    },",
                          "    \"reward\" : {",
                          "      \"type\" : \"string\",",
                          "      \"id\" : null,",
                          "      \"value\" : \"integer\",",
                          "      \"brands\" : [ {",
                          "          \"brand\" : \"string\",",
                          "          \"products\" : \"array\"",
                          "        } ]",
                          "    }",
                          "  },",
                          "  \"startDate\" : \"date\",",
                          "  \"endDate\" : \"date\",",
                          "  \"budgetId\" : \"string\",",
                          "  \"familyCode\" : \"string\",",
                          "  \"gs1Databar\" : \"string\"",
                          "  ",
                          "}",
                          "",
                          "",
                          "pm.test('Schema is valid', function() {",
                          "  pm.expect(tv4.validate(testObject, schema)).to.be.true;",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      },
                      {
                        "key": "Accept",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\r\n  \"title\" : \"Get $0.50 on Ivory Body Wash \",\r\n  \"providerPromotionCode\" : \"131240 \",\r\n  \"text\" : \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\" : \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\" : [ \"ivory/5b3e8c36d12f85041119ea07.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"type\": \"BuyProductCondition\",\r\n            \"id\": 1,\r\n            \"mpr\": 1,\r\n            \"product\": {\r\n                \"upcs\": [\"16000430051\"],\r\n                \"brands\": []\r\n            }\r\n    },\r\n \"reward\": {\r\n            \"type\": \"DiscountPrcReward\",\r\n            \"id\": null,\r\n            \"value\": 100\r\n        }\r\n    },\r\n  \"startDate\" : \"2018-01-01T14:00:00\",\r\n  \"endDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"130\",\r\n  \"gs1Databar\" : \"81101007560913123933001101303170701\"\r\n  \r\n}"
                    },
                    "url": "http://qa-apps.caligotech.com:8188/promotions/"
                  },
                  "response": []
                }
              ],
              "_postman_isSubFolder": true
            }
          ],
          "_postman_isSubFolder": true
        }
      ]
    },
    {
      "_postman_id": "593c8526-cb98-4acf-9f12-673d2ac2c21c",
      "name": "setup samples",
      "description": "",
      "item": [
        {
          "_postman_id": "c3758bc1-69c8-47f7-97e9-e42bb69f868c",
          "name": "Budget",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b835d24f-abe8-4c6d-b147-e80d67eac1c6",
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"budgetId\", testObject.id);",
                  "pm.environment.set(\"budgetML\", testObject.maxLimit);",
                  "",
                  "pm.test(\"Budget contains ML\", function() {",
                  "    const maxLimit = testObject.maxLimit;",
                  "    const lengthmaxLimit = maxLimit !==  null;",
                  "    pm.expect(lengthmaxLimit).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Budget contains id\", function() {",
                  "    const id = testObject.id;",
                  "    const lengthId = id !==  null;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Budget contains name\", function() {",
                  "    const name = testObject.name;",
                  "    const lengthname = name.length > 0;",
                  "    pm.expect(lengthname).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Budget contains description\", function() {",
                  "    const description = testObject.description;",
                  "    const lengthDescription = description.length > 0;",
                  "    pm.expect(lengthDescription).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Budget is CLIP\", function() {",
                  "    const action = testObject.action;",
                  "    pm.expect(action).to.eql(\"CLIP\");",
                  "});",
                  "",
                  "pm.test(\"Budget is not suspended\", function() {",
                  "    const suspended = testObject.suspended;",
                  "    pm.expect(suspended).to.eql(false);",
                  "});",
                  ""
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "485c3853-ffd7-4c0b-9916-ab58eb52dbde",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "const budgetJson = JSON.parse(pm.request.body.raw);",
                  "pm.environment.set(\"budgetJson\",budgetJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": null,\n  \"action\": \"CLIP\",\n  \"name\": \"promotion budget\",\n  \"description\": \"promotion budget\",\n  \"maxLimit\": \"3\"\n}"
            },
            "url": "{{url}}:{{portHoth}}/budget-api/budgets"
          },
          "response": []
        },
        {
          "_postman_id": "c410db32-77e3-4b91-9590-82fc2f85a936",
          "name": "P1",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "3a4fa5f6-99b8-4394-9f35-e3c6d5681b2f",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoCentsOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoCentsOffJson\",promoCentsOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startDate\": \"2018-11-14T01:10:29\",\n  \"endDate\": \"2018-11-28T01:10:29\",\n  \"familyCode\": \"620\",\n  \"gs1Databar\": \"811010021908110786310011062090000\",\n  \"providerPromotionCode\": \"110786\",\n  \"nonNegotiable\": false,\n  \"brands\": [\n    {\n      \"brand\": \"12\",\n      \"products\": []\n    }\n  ],\n  \"title\": \"P1\",\n  \"text\": \"Buy 1 NV Crisps and get $1.00 off\",\n  \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n  \"images\": [\n    \"promotion/5c1d218b5866540cfab239b5.png\"\n  ],\n  \"rule\": {\n    \"type\": \"SingleRule\",\n    \"id\": 0,\n    \"condition\": {\n      \"type\": \"ChainCondition\",\n      \"id\": 3,\n      \"conditions\": [\n        {\n          \"type\": \"ClipCondition\",\n          \"id\": 4,\n          \"valueInDollars\": \"\"\n        },\n        {\n          \"type\": \"BuyProductCondition\",\n          \"id\": 1,\n          \"mpr\": 1,\n          \"product\": {\n            \"upcs\": [\n              \"37000863571\",\n              \"37000863441\",\n              \"37000863823\",\n              \"37000863861\",\n              \"37000863410\",\n              \"37000863458\"\n            ],\n            \"brands\": [\n              {\n                \"brand\": \"6\",\n                \"products\": [\n                  \"61\"\n                ]\n              }\n            ]\n          },\n          \"acrossTransactions\": false,\n          \"valueInDollars\": \"\"\n        }\n      ]\n    },\n    \"reward\": {\n      \"type\": \"DiscountValueReward\",\n      \"id\": 2,\n      \"value\": 100,\n      \"valueInDollars\": \"1.00\",\n      \"maxValueInDollars\": \"\"\n    }\n  },\n  \"modifiedBy\": \"Admin User\",\n  \"modifiedOn\": 1545413013147,\n  \"status\": \"DRAFT\",\n  \"pausedCampaigns\": 0,\n  \"paused\": false,\n  \"displayByDate\" : \"2018-01-31T14:00:00\",\n  \"budgetId\" : \"{{budgetId}}\",\n   \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n   \"timezone\":\"UTC+1\"\n  \n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "e14f04ec-f82b-4c08-b5ca-80b6c7e2ae18",
          "name": "P2",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "5f67bae3-a083-4cf3-81d4-54469cf7cc4c",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBxGxJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBxGxJson\",promoBxGxJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"startDate\": \"2018-11-14T01:10:29\",\n  \"endDate\": \"2018-11-28T01:10:29\",\n  \"familyCode\": \"620\",\n  \"gs1Databar\": \"811010021908110786310011062090000\",\n  \"providerPromotionCode\": \"110786\",\n  \"nonNegotiable\": false,\n  \"brands\": [\n    {\n      \"brand\": \"12\",\n      \"products\": []\n    }\n  ],\n  \"title\": \"P2\",\n  \"text\": \"Get 3 points when you buy Tide Liquid \",\n  \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n  \"images\": [\n    \"promotion/5c1d229d5866540cfab239b6.png\"\n  ],\n  \"rule\": {\n    \"type\": \"SingleRule\",\n    \"id\": 0,\n    \"condition\": {\n      \"type\": \"ChainCondition\",\n      \"id\": 3,\n      \"conditions\": [\n        {\n          \"type\": \"ClipCondition\",\n          \"id\": 4,\n          \"valueInDollars\": \"\"\n        },\n        {\n          \"type\": \"BuyProductCondition\",\n          \"id\": 1,\n          \"mpr\": 1,\n          \"product\": {\n            \"upcs\": [\n              \"37000968160\",\n              \"37000968177\",\n              \"37000968108\",\n              \"37000968368\",\n              \"37000968139\",\n              \"37000968214\",\n              \"37000968344\",\n              \"37000968207\"\n            ],\n            \"brands\": [\n              {\n                \"brand\": \"12\",\n                \"products\": [\n                  \"120\"\n                ]\n              }\n            ]\n          },\n          \"acrossTransactions\": false,\n          \"valueInDollars\": \"\"\n        }\n      ]\n    },\n    \"reward\": {\n      \"type\": \"CurrencyReward\",\n      \"id\": 2,\n      \"currencyName\": \"POINTS\",\n      \"value\": 3,\n      \"valueInDollars\": \"\",\n      \"maxValueInDollars\": \"\"\n    }\n  },\n\n  \"modifiedBy\": \"Admin User\",\n  \"modifiedOn\": 1545413296719,\n  \"status\": \"DRAFT\",\n  \"campaignStatuses\": {\n    \"DRAFT\": 16\n  },\n  \"pausedCampaigns\": 0,\n  \"paused\": false,\n  \"displayByDate\" : \"2018-01-31T14:00:00\",\n  \"budgetId\" : \"{{budgetId}}\",\n   \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n   \"timezone\":\"UTC+1\"\n  \n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "f72041cb-0f1a-4b6c-9a58-b5ec0df5a94f",
          "name": "P3",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "92cf64f0-ae28-40bf-8c05-705531efa967",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBxGyJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBxGyJson\",promoBxGyJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P3\",\n    \"text\": \"Get 10 points when you buy Tide Liquid or Tide Pods \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 1,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"37000968160\",\n                            \"37000968177\",\n                            \"37000968108\",\n                            \"37000968368\",\n                            \"37000968139\",\n                            \"37000968214\",\n                            \"37000968344\",\n                            \"37000968207\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"22\",\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"CurrencyReward\",\n            \"id\": 2,\n            \"currencyName\": \"POINTS\",\n            \"value\": 10,\n            \"valueInDollars\": \"\",\n            \"maxValueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545413445776,\n    \"status\": \"DRAFT\",\n    \"campaignStatuses\": {\n        \"DRAFT\": 32\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "33b011d9-e22e-43c6-a33d-55bb97e6a4b8",
          "name": "P4",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"mfrId\": \"37000\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P4\",\n    \"text\": \"Get 3 points when you buy Tide Liquid  or  get 4 points when you buy Tide Pods \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"OrRule\",\n        \"id\": 0,\n        \"rules\": [\n            {\n                \"type\": \"SingleRule\",\n                \"id\": 1,\n                \"condition\": {\n                    \"type\": \"ChainCondition\",\n                    \"id\": 7,\n                    \"conditions\": [\n                        {\n                            \"type\": \"ClipCondition\",\n                            \"id\": 8,\n                            \"valueInDollars\": \"\"\n                        },\n                        {\n                            \"type\": \"BuyProductCondition\",\n                            \"id\": 2,\n                            \"mpr\": 1,\n                            \"product\": {\n                                \"upcs\": [\n                                    \"37000968160\",\n                                    \"37000968177\",\n                                    \"37000968108\",\n                                    \"37000968368\",\n                                    \"37000968139\",\n                                    \"37000968214\",\n                                    \"37000968344\",\n                                    \"37000968207\"\n                                ],\n                                \"brands\": [\n                                    {\n                                        \"brand\": \"2\",\n                                        \"products\": [\n                                            \"22\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"acrossTransactions\": false,\n                            \"valueInDollars\": \"\"\n                        }\n                    ]\n                },\n                \"reward\": {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": 3,\n                    \"currencyName\": \"POINTS\",\n                    \"value\": 3,\n                    \"valueInDollars\": \"\",\n                    \"maxValueInDollars\": \"\"\n                }\n            },\n            {\n                \"type\": \"SingleRule\",\n                \"id\": 4,\n                \"condition\": {\n                    \"type\": \"ChainCondition\",\n                    \"id\": 9,\n                    \"conditions\": [\n                        {\n                            \"type\": \"ClipCondition\",\n                            \"id\": 10,\n                            \"valueInDollars\": \"\"\n                        },\n                        {\n                            \"type\": \"BuyProductCondition\",\n                            \"id\": 5,\n                            \"mpr\": 1,\n                            \"product\": {\n                                \"upcs\": [],\n                                \"brands\": [\n                                    {\n                                        \"brand\": \"2\",\n                                        \"products\": [\n                                            \"23\"\n                                        ]\n                                    }\n                                ]\n                            },\n                            \"acrossTransactions\": false,\n                            \"valueInDollars\": \"\"\n                        }\n                    ]\n                },\n                \"reward\": {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": 6,\n                    \"currencyName\": \"POINTS\",\n                    \"value\": 4,\n                    \"valueInDollars\": \"\",\n                    \"maxValueInDollars\": \"\"\n                }\n            }\n        ]\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545413553324,\n    \"status\": \"DRAFT\",\n    \"campaignStatuses\": {\n        \"DRAFT\": 16\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "c0c2d9fa-2d37-4f3d-af40-f50d9e3e4e93",
          "name": "P5",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2019-01-31T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P5\",\n    \"text\": \"Spend $25 on Tide Liquid or Pods get $10.00 Off basket \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"SpendCondition\",\n                    \"id\": 1,\n                    \"currencyName\": \"USD\",\n                    \"value\": 2500,\n                    \"product\": {\n                        \"upcs\": [\n                            \"37000509640\",\n                            \"37000874737\",\n                            \"37000979470\",\n                            \"37000230687\",\n                            \"37000985112\",\n                            \"37000139027\",\n                            \"37000088851\",\n                            \"37000931614\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\",\n                                    \"22\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"25.00\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": 2,\n            \"value\": 1000,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"10.00\",\n            \"maxValueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545413998211,\n    \"status\": \"DRAFT\",\n    \"campaignStatuses\": {\n        \"DRAFT\": 16\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "2411127b-7e54-4c3d-9741-f49a4d8486c9",
          "name": "P6",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2019-01-01T11:48:09\",\n    \"endDate\": \"2019-01-31T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P6\",\n    \"text\": \"Spend $100 get 10% Off basket \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4\n                },\n                {\n                    \"type\": \"SpendCondition\",\n                    \"id\": 1,\n                    \"currencyName\": \"USD\",\n                    \"value\": 10000,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"acrossTransactions\": false\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"DiscountPrcReward\",\n            \"id\": 2,\n            \"value\": 10,\n            \"maxValue\": 0,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            }\n        }\n    },\n\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545415263182,\n    \"status\": \"ACTIVE\",\n    \"campaignStatuses\": {\n        \"INITIATED\": 16\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"basketOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "b0d0c1a9-434f-4f4b-87c7-a6a41f2c0663",
          "name": "P7",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2019-01-01T11:48:09\",\n    \"endDate\": \"2019-01-31T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P7\",\n    \"text\": \"Spend $100 get 100 points \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"SpendCondition\",\n                    \"id\": 1,\n                    \"currencyName\": \"USD\",\n                    \"value\": 10000,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"100.00\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"CurrencyReward\",\n            \"id\": 2,\n            \"currencyName\": \"POINTS\",\n            \"value\": 100,\n            \"valueInDollars\": \"\",\n            \"maxValueInDollars\": \"\"\n        }\n    },\n\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545415497616,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "f4ea365f-c845-4f7e-9850-0c67ce52b259",
          "name": "P8",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2019-01-01T11:48:09\",\n    \"endDate\": \"2019-01-31T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P8\",\n    \"text\": \"Buy 1 NV Crisps and get one NV Crisps free \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"promotion/5c1d2bb15866540cfab239b7.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 1,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"6\",\n                                \"products\": [\n                                    \"61\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"FreeProductReward\",\n            \"id\": 2,\n            \"quantity\": 1,\n            \"maxValue\": 0,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": \"6\",\n                        \"products\": [\n                            \"61\"\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\",\n            \"maxValueInDollars\": \"0.00\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545415617841,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"bxgx\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "42ba770a-629b-411c-855b-04f99f21fb33",
          "name": "P9",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"BuyProductCondition\",\n            \"id\": 1,\n            \"mpr\": \"2\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": \"6\",\n                        \"products\": [\n                            \"61\"\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"type\": \"FreeProductReward\",\n            \"id\": 2,\n            \"quantity\": 1,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": \"6\",\n                        \"products\": [\n                            \"61\"\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542226187783,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"bxgx\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "0e5087e8-8422-44cf-a2e1-66066be0225b",
          "name": "P10",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P10\",\n    \"text\": \"Buy 1 NV Crisps and get $0.50 off NV Crisps \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"promotion/5c1d2e2c5866540cfab239b9.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 3,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 4,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 1,\n                    \"mpr\": 2,\n                    \"product\": {\n                        \"upcs\": [\n                            \"16000489981\",\n                            \"16000489820\",\n                            \"16000489837\",\n                            \"16000489974\",\n                            \"016000335509\",\n                            \"016000151208\",\n                            \"016000335301\",\n                            \"016000420687\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"6\",\n                                \"products\": [\n                                    \"61\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": 2,\n            \"value\": 50,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"0.50\",\n            \"maxValueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545416250964,\n    \"status\": \"DRAFT\",\n    \"campaignStatuses\": {\n        \"DRAFT\": 16\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "2879aad4-4991-4c97-8867-5d5406a771d6",
          "name": "P11",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"nonNegotiable\": false,\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"P11\",\n    \"text\": \"Buy 3 NV Crisps and get $0.50 off NV Crisps and 5 points \",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"promotion/5c1d2e955866540cfab239ba.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"id\": 5,\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\",\n                    \"id\": 6,\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 1,\n                    \"mpr\": 3,\n                    \"product\": {\n                        \"upcs\": [\n                            \"16000489981\",\n                            \"16000489820\",\n                            \"16000489837\",\n                            \"16000489974\",\n                            \"016000335509\",\n                            \"016000151208\",\n                            \"016000335301\",\n                            \"016000420687\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"6\",\n                                \"products\": [\n                                    \"61\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"acrossTransactions\": false,\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": 2,\n            \"rewards\": [\n                {\n                    \"type\": \"DiscountValueReward\",\n                    \"id\": 3,\n                    \"value\": 50,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"6\",\n                                \"products\": [\n                                    \"61\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"0.50\",\n                    \"maxValueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": 4,\n                    \"currencyName\": \"POINTS\",\n                    \"value\": 5,\n                    \"valueInDollars\": \"\",\n                    \"maxValueInDollars\": \"\"\n                }\n            ],\n            \"valueInDollars\": \"\",\n            \"maxValueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1545416355580,\n    \"status\": \"DRAFT\",\n    \"campaignStatuses\": {\n        \"DRAFT\": 16\n    },\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "568086b4-f872-4f87-bd6b-37879bd9bb43",
          "name": "P12",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"id\": null,\n            \"type\": \"BuyProductCondition\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"mpr\": \"1\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"FreeProductReward\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"quantity\": \"1\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            23\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542226982093,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"bxgy\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "e48656ee-9be0-4a1d-bfca-6d6190b04485",
          "name": "P13",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": null,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": \"1\",\n                    \"value\": \"\",\n                    \"amount\": \"\",\n                    \"url\": \"\",\n                    \"currencyName\": \"USD\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 2,\n                                \"products\": [\n                                    22\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": \"1\",\n                    \"value\": \"\",\n                    \"amount\": \"\",\n                    \"currencyName\": \"USD\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 2,\n                                \"products\": [\n                                    23\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"DiscountValueReward\",\n            \"value\": 100,\n            \"amount\": 100,\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            23\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"1\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542228829385,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "7a11a398-d980-4f7d-b4b3-fc252e92f102",
          "name": "P14",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": 1,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 2,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"22\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 3,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": null,\n            \"rewards\": [\n                {\n                    \"type\": \"DiscountValueReward\",\n                    \"id\": 4,\n                    \"value\": 100,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"1.00\"\n                },\n                {\n                    \"id\": null,\n                    \"type\": \"CurrencyReward\",\n                    \"value\": \"5\",\n                    \"amount\": \"\",\n                    \"quantity\": \"\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"currencyName\": \"POINTS\"\n                }\n            ]\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542228966069,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "dbac0d49-7a89-4776-ae53-52fa6250eca4",
          "name": "P15",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"WatchVideoCondition\",\n            \"id\": null,\n            \"mpr\": \"\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"url\": \"https://www.youtube.com\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"CurrencyReward\",\n            \"value\": \"10\",\n            \"amount\": \"\",\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"\",\n            \"currencyName\": \"POINTS\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542229060626,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "15a8c928-8890-43a2-9e7a-91917ca8f0d0",
          "name": "P16",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"WatchVideoCondition\",\n            \"id\": 1,\n            \"url\": \"https://www.youtube.com\"\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": 2,\n            \"currencyName\": \"POINTS\",\n            \"value\": 100,\n            \"valueInDollars\": \"1\",\n            \"amount\": 100\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542229301371,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "e3281447-3a23-4289-9ddf-9624469275da",
          "name": "P17",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"id\": null,\n            \"type\": \"BuyProductCondition\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"mpr\": \"10\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 6,\n                        \"products\": [\n                            61\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"FreeProductReward\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"quantity\": \"3\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 6,\n                        \"products\": [\n                            61\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542229349026,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"bxgy\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "ad9fd0f0-c5e3-4fa7-8a39-0bc16a9ffb53",
          "name": "P17RT",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2017-01-01T14:00:00\",\n    \"endDate\": \"2019-01-30T14:00:00\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"providerPromotionCode\": \"131554 \",\n    \"title\": \"Get $0.50 OFF TEST  \",\n    \"text\": \"When buy Two Gain laundry detergent \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"Gain liquid fabric enhancer/5b6b6bf4d12f8512623c2e8c.png\"\n    ],\n    \"brands\": [\n        {\n            \"brand\": \"3\",\n            \"products\": [\n                \"36\",\n                \"37\"\n            ]\n        }\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"ChainCondition\",\n            \"conditions\": [\n                {\n                    \"type\": \"ClipCondition\"\n                },\n                {\n                    \"type\": \"andCondition\",\n                    \"conditions\": [\n                        {\n                            \"type\": \"BuyProductCondition\",\n                            \"acrossTransactions\": \"true\",\n                            \"id\": null,\n                            \"mpr\": 1,\n                            \"product\": {\n                                \"upcs\": [\n                                    \"1234\",\n                                    \"5678\"\n                                ],\n                                \"brands\": [\n                                    {\n                                        \"brand\": \"Tide\",\n                                        \"products\": [\n                                            \"Pods\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        },\n                        {\n                            \"type\": \"BuyProductCondition\",\n                            \"acrossTransactions\": \"true\",\n                            \"id\": null,\n                            \"mpr\": 1,\n                            \"product\": {\n                                \"upcs\": [\n                                    \"upc_1\",\n                                    \"upc_2\"\n                                ],\n                                \"brands\": [\n                                    {\n                                        \"brand\": \"Tide\",\n                                        \"products\": [\n                                            \"Liquid\"\n                                        ]\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": 2,\n            \"value\": 50\n        }\n    },\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "e2b00a85-ee97-4eb9-a411-8a3f72607d8d",
          "name": "P18",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"BuyProductCondition\",\n            \"id\": null,\n            \"mpr\": \"10\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"url\": \"\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 6,\n                        \"products\": [\n                            61\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": null,\n            \"rewards\": [\n                {\n                    \"id\": null,\n                    \"type\": \"FreeProductReward\",\n                    \"value\": \"2\",\n                    \"amount\": \"\",\n                    \"quantity\": \"2\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 6,\n                                \"products\": [\n                                    62\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\",\n                    \"currencyName\": \"POINTS\"\n                },\n                {\n                    \"id\": null,\n                    \"type\": \"CurrencyReward\",\n                    \"value\": \"25\",\n                    \"amount\": \"\",\n                    \"quantity\": \"\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"currencyName\": \"POINTS\"\n                }\n            ]\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542229530852,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "51cc0b21-e81f-4250-9954-0f9af3b944c1",
          "name": "P18RT - wrong con/rew",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"startDate\": \"2017-01-01T14:00:00\",\r\n  \"endDate\": \"2019-01-30T14:00:00\",\r\n  \"familyCode\": \"130\",\r\n  \"gs1Databar\": \"81101007560913123933001101303170701\",\r\n  \"providerPromotionCode\": \"131554 \",\r\n  \"title\": \"Get $0.50 OFF TEST  \",\r\n  \"text\": \"When buy Two Gain laundry detergent \",\r\n  \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\": [\r\n    \"Gain liquid fabric enhancer/5b6b6bf4d12f8512623c2e8c.png\"\r\n  ],\r\n  \"brands\": [\r\n    {\r\n      \"brand\": \"3\",\r\n      \"products\": [\r\n        \"36\",\r\n        \"37\"\r\n      ]\r\n    }\r\n  ],\r\n  \"rule\": {\r\n    \"type\": \"SingleRule\",\r\n    \"id\": 0,\r\n    \"condition\": {\r\n      \"type\": \"ChainCondition\",\r\n      \"conditions\": [\r\n        {\r\n          \"type\": \"ClipCondition\"\r\n        },\r\n        {\r\n          \"type\": \"AndCondition\",\r\n          \"conditions\": [\r\n            {\r\n              \"type\": \"BuyProductCondition\",\r\n              \"acrossTransactions\": \"true\",\r\n              \"id\": null,\r\n              \"mpr\": 10,\r\n              \"product\": {\r\n                \"upcs\": [\r\n                  \"1234\",\r\n                  \"5678\"\r\n                ],\r\n                \"brands\": [\r\n                  {\r\n                    \"brand\": \"6\",\r\n                    \"products\": [\r\n                      \"61\"\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n      ]\r\n    }],\r\n    \"reward\": {\r\n      \"type\": \"AndReward\",\r\n      \"id\": null,\r\n      \"rewards\": [\r\n        {\r\n          \"id\": null,\r\n          \"type\": \"FreeProductReward\",\r\n          \"value\": \"2\",\r\n          \"amount\": \"\",\r\n          \"quantity\": \"2\",\r\n          \"product\": {\r\n            \"upcs\": [],\r\n            \"brands\": [\r\n              {\r\n                \"brand\": 6,\r\n                \"products\": [\r\n                  62\r\n                ]\r\n              }\r\n            ]\r\n          },\r\n          \"valueInDollars\": \"\",\r\n          \"currencyName\": \"POINTS\"\r\n        },\r\n        {\r\n          \"id\": null,\r\n          \"type\": \"CurrencyReward\",\r\n          \"value\": \"25\",\r\n          \"amount\": \"\",\r\n          \"quantity\": \"\",\r\n          \"product\": {\r\n            \"upcs\": [],\r\n            \"brands\": []\r\n          },\r\n          \"currencyName\": \"POINTS\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n\r\n  \"modifiedBy\": \"Admin User\",\r\n  \"modifiedOn\": 1542229530852,\r\n  \"status\": \"DRAFT\",\r\n  \"pausedCampaigns\": 0,\r\n  \"paused\": false,\r\n\r\n    \"displayByDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"{{budgetId}}\",\r\n\r\n  \"nonNegotiable\": false,\r\n   \"properties\": {\r\n        \"templateName\": {\r\n            \"type\": \"prop_string\",\r\n            \"value\": \"custom\"\r\n        }\r\n    },\r\n   \"timezone\":\"UTC+1\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "51abb1d4-86a8-464c-9d37-e47cb18602ad",
          "name": "P19",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"id\": null,\n            \"type\": \"BuyProductCondition\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"mpr\": \"5\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"FreeProductReward\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"quantity\": \"1\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            23\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542229824117,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"bxgy\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "ec498363-6f61-40a2-80ca-ef0280dfb157",
          "name": "P20",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"id\": null,\n            \"type\": \"BuyProductCondition\",\n            \"mpr\": \"10\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"DiscountValueReward\",\n            \"value\": 1000,\n            \"amount\": 1000,\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"10\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542230360124,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "a51e4559-aef1-4a50-b138-b24ce37b7644",
          "name": "P20RT - wrong cond/rew",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"startDate\": \"2017-01-01T14:00:00\",\r\n  \"endDate\": \"2019-01-30T14:00:00\",\r\n  \"familyCode\": \"130\",\r\n  \"gs1Databar\": \"81101007560913123933001101303170701\",\r\n  \"providerPromotionCode\": \"131554 \",\r\n  \"title\": \"Get $0.50 OFF TEST  \",\r\n  \"text\": \"When buy Two Gain laundry detergent \",\r\n  \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\": [\r\n    \"Gain liquid fabric enhancer/5b6b6bf4d12f8512623c2e8c.png\"\r\n  ],\r\n  \"brands\": [\r\n    {\r\n      \"brand\": \"3\",\r\n      \"products\": [\r\n        \"36\",\r\n        \"37\"\r\n      ]\r\n    }\r\n  ],\r\n  \"rule\": {\r\n    \"type\": \"SingleRule\",\r\n    \"id\": 0,\r\n    \"condition\": {\r\n      \"type\": \"ChainCondition\",\r\n      \"conditions\": [\r\n        {\r\n          \"type\": \"ClipCondition\"\r\n        },\r\n        {\r\n          \"type\": \"andCondition\",\r\n          \"conditions\": [\r\n            {\r\n              \"type\": \"BuyProductCondition\",\r\n              \"acrossTransactions\": \"true\",\r\n              \"id\": null,\r\n              \"mpr\": 10,\r\n              \"product\": {\r\n                \"upcs\": [\r\n                  \"1234\",\r\n                  \"5678\"\r\n                ],\r\n                \"brands\": [\r\n                  {\r\n                    \"brand\": \"6\",\r\n                    \"products\": [\r\n                      \"61\"\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n      ]\r\n    },\r\n     \"reward\": {\r\n      \"id\": null,\r\n      \"type\": \"DiscountValueReward\",\r\n      \"value\": 1000,\r\n      \"amount\": 1000,\r\n      \"quantity\": \"\",\r\n      \"product\": {\r\n        \"upcs\": [],\r\n        \"brands\": []\r\n      },\r\n      \"valueInDollars\": \"10\"\r\n    }\r\n  },\r\n \r\n  \"modifiedBy\": \"Admin User\",\r\n  \"modifiedOn\": 1542230360124,\r\n  \"status\": \"DRAFT\",\r\n  \"pausedCampaigns\": 0,\r\n  \"paused\": false,\r\n\r\n  \r\n    \"displayByDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"{{budgetId}}\",\r\n\r\n   \"properties\": {\r\n        \"templateName\": {\r\n            \"type\": \"prop_string\",\r\n            \"value\": \"centsOff\"\r\n        }\r\n    },\r\n   \"timezone\":\"UTC+1\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "4016fc41-b4de-4ae7-8ec0-7f347e2a2af4",
          "name": "P21",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": null,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": \"5\",\n                    \"value\": \"\",\n                    \"amount\": \"\",\n                    \"url\": \"\",\n                    \"currencyName\": \"USD\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 2,\n                                \"products\": [\n                                    22\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": \"1\",\n                    \"value\": \"\",\n                    \"amount\": \"\",\n                    \"currencyName\": \"USD\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 2,\n                                \"products\": [\n                                    23\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": null,\n            \"rewards\": [\n                {\n                    \"id\": null,\n                    \"type\": \"DiscountValueReward\",\n                    \"value\": 500,\n                    \"amount\": 500,\n                    \"quantity\": \"\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": 2,\n                                \"products\": [\n                                    23\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"5\"\n                },\n                {\n                    \"id\": null,\n                    \"type\": \"CurrencyReward\",\n                    \"value\": \"50\",\n                    \"amount\": \"\",\n                    \"quantity\": \"\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"currencyName\": \"POINTS\"\n                }\n            ]\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542230566155,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "47249589-ee29-4a92-b5c4-8154382cd692",
          "name": "P22",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": 1,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 2,\n                    \"mpr\": \"15\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"22\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 3,\n                    \"mpr\": \"5\",\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": 4,\n            \"rewards\": [\n                {\n                    \"type\": \"DiscountValueReward\",\n                    \"id\": 5,\n                    \"value\": 2000,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": []\n                    },\n                    \"valueInDollars\": \"20\",\n                    \"amount\": 2000\n                },\n                {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": 6,\n                    \"currencyName\": \"POINTS\",\n                    \"value\": \"100\",\n                    \"valueInDollars\": \"\"\n                }\n            ],\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542230686419,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "882bda95-f3ce-46a8-966f-37838455993c",
          "name": "P22RT - wromg cond/rew",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"startDate\": \"2017-01-01T14:00:00\",\r\n  \"endDate\": \"2019-01-30T14:00:00\",\r\n  \"familyCode\": \"130\",\r\n  \"gs1Databar\": \"81101007560913123933001101303170701\",\r\n  \"providerPromotionCode\": \"131554 \",\r\n  \"title\": \"Get $0.50 OFF TEST  \",\r\n  \"text\": \"When buy Two Gain laundry detergent \",\r\n  \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\": [\r\n    \"Gain liquid fabric enhancer/5b6b6bf4d12f8512623c2e8c.png\"\r\n  ],\r\n  \"brands\": [\r\n    {\r\n      \"brand\": \"3\",\r\n      \"products\": [\r\n        \"36\",\r\n        \"37\"\r\n      ]\r\n    }\r\n  ],\r\n  \"rule\": {\r\n    \"type\": \"SingleRule\",\r\n    \"id\": 0,\r\n    \"condition\": {\r\n      \"type\": \"ChainCondition\",\r\n      \"conditions\": [\r\n        {\r\n          \"type\": \"ClipCondition\"\r\n        },\r\n        {\r\n          \"type\": \"andCondition\",\r\n          \"conditions\": [\r\n            {\r\n              \"type\": \"BuyProductCondition\",\r\n              \"acrossTransactions\": \"true\",\r\n              \"id\": null,\r\n              \"mpr\": 15,\r\n              \"product\": {\r\n                \"upcs\": [\r\n                  \"1234\",\r\n                  \"5678\"\r\n                ],\r\n                \"brands\": [\r\n                  {\r\n                    \"brand\": \"6\",\r\n                    \"products\": [\r\n                      \"61\"\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            },\r\n\t\t\t{\r\n              \"type\": \"BuyProductCondition\",\r\n              \"acrossTransactions\": \"true\",\r\n              \"id\": null,\r\n              \"mpr\": 10,\r\n              \"product\": {\r\n                \"upcs\": [\r\n                  \"1234\",\r\n                  \"5678\"\r\n                ],\r\n                \"brands\": [\r\n                  {\r\n                    \"brand\": \"6\",\r\n                    \"products\": [\r\n                      \"62\"\r\n                    ]\r\n                  }\r\n                ]\r\n              }\r\n            }\r\n      ]\r\n    },\r\n     \"reward\": {\r\n      \"type\": \"AndReward\",\r\n      \"id\": 4,\r\n      \"rewards\": [\r\n        {\r\n          \"type\": \"DiscountValueReward\",\r\n          \"id\": 5,\r\n          \"value\": 2000,\r\n          \"product\": {\r\n            \"upcs\": [],\r\n            \"brands\": []\r\n          },\r\n          \"valueInDollars\": \"20\",\r\n          \"amount\": 2000\r\n        },\r\n        {\r\n          \"type\": \"CurrencyReward\",\r\n          \"id\": 6,\r\n          \"currencyName\": \"POINTS\",\r\n          \"value\": \"100\",\r\n          \"valueInDollars\": \"\"\r\n        }\r\n      ],\r\n      \"valueInDollars\": \"\"\r\n    }\r\n  },\r\n  \"modifiedBy\": \"Admin User\",\r\n  \"modifiedOn\": 1542230686419,\r\n  \"status\": \"DRAFT\",\r\n  \"pausedCampaigns\": 0,\r\n  \"paused\": false,\r\n  \"clipByDate\": \"2018-11-21T11:48:09\",\r\n  \"templateName\": \"custom\"\r\n  \r\n    \"displayByDate\" : \"2018-01-31T14:00:00\",\r\n  \"budgetId\" : \"{{budgetId}}\",\r\n \r\n   \"properties\": {\r\n        \"templateName\": {\r\n            \"type\": \"prop_string\",\r\n            \"value\": \"custom\"\r\n        }\r\n    },\r\n   \"timezone\":\"UTC+1\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "a5d946e4-2c8a-4052-8aad-a76e7bfefa14",
          "name": "P23",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": 1,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 2,\n                    \"mpr\": 15,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"22\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 3,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": 4,\n            \"rewards\": [\n                {\n                    \"type\": \"DiscountValueReward\",\n                    \"id\": 5,\n                    \"value\": 100,\n                    \"product\": {\n                        \"upcs\": [],\n                        \"brands\": [\n                            {\n                                \"brand\": \"2\",\n                                \"products\": [\n                                    \"23\"\n                                ]\n                            }\n                        ]\n                    },\n                    \"valueInDollars\": \"1.00\"\n                },\n                {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": 6,\n                    \"currencyName\": \"POINTS\",\n                    \"value\": \"5\",\n                    \"valueInDollars\": \"\"\n                }\n            ],\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542230956492,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "3870d2a8-86e8-4158-8881-95c823dcec8f",
          "name": "P24",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"startDate\": \"2018-11-14T11:48:09\",\r\n  \"endDate\": \"2018-11-28T11:48:09\",\r\n  \"budgetId\": \"5\",\r\n  \"familyCode\": \"620\",\r\n  \"gs1Databar\": \"811010021908110786310011062090000\",\r\n  \"providerPromotionCode\": \"110786\",\r\n  \"brands\": [\r\n    {\r\n      \"brand\": \"2\",\r\n      \"products\": [\r\n        \"23\"\r\n      ]\r\n    }\r\n  ],\r\n  \"title\": \"Get $1.00 OFF\",\r\n  \"text\": \"When buy Tide PODS\",\r\n  \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\r\n  \"images\": [\r\n    \"tidepods/5b6b6b68d12f8512623c2e88.png\"\r\n  ],\r\n  \"rule\": {\r\n    \"id\": null,\r\n    \"type\": \"SingleRule\",\r\n    \"condition\": {\r\n      \"type\": \"AndCondition\",\r\n      \"id\": null,\r\n      \"conditions\": [\r\n        {\r\n          \"type\": \"WatchVideoCondition\",\r\n          \"id\": null,\r\n          \"mpr\": \"\",\r\n          \"value\": \"\",\r\n          \"amount\": \"\",\r\n          \"url\": \"www.youtube.com\",\r\n          \"currencyName\": \"USD\",\r\n          \"product\": {\r\n            \"upcs\": [],\r\n            \"brands\": []\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"BuyProductCondition\",\r\n          \"id\": null,\r\n          \"mpr\": \"1\",\r\n          \"value\": \"\",\r\n          \"amount\": \"\",\r\n          \"currencyName\": \"USD\",\r\n          \"product\": {\r\n            \"upcs\": [],\r\n            \"brands\": [\r\n              {\r\n                \"brand\": 2,\r\n                \"products\": [\r\n                  23\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    },\r\n    \"reward\": {\r\n      \"id\": null,\r\n      \"type\": \"DiscountValueReward\",\r\n      \"value\": 500,\r\n      \"amount\": 500,\r\n      \"quantity\": \"\",\r\n      \"product\": {\r\n        \"upcs\": [],\r\n        \"brands\": [\r\n          {\r\n            \"brand\": 2,\r\n            \"products\": [\r\n              23\r\n            ]\r\n          }\r\n        ]\r\n      },\r\n      \"valueInDollars\": \"5\"\r\n    }\r\n  },\r\n  \"id\": \"5bec7d9fd12f850c7039a246\",\r\n  \"modifiedBy\": \"Admin User\",\r\n  \"modifiedOn\": 1542231164247,\r\n  \"status\": \"DRAFT\",\r\n  \"pausedCampaigns\": 0,\r\n  \"paused\": false,\r\n  \"clipByDate\": \"2018-11-21T11:48:09\",\r\n  \"templateName\": \"custom\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "048d3084-4aee-49b3-a7b0-8cc5399fb375",
          "name": "P25",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"WatchVideoCondition\",\n            \"id\": null,\n            \"mpr\": \"\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"url\": \"www.youtube.com\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"FreeProductReward\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"quantity\": \"1\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            23\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542231312878,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "767ec773-64c1-4820-9d88-75739e154058",
          "name": "P26",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"id\": null,\n            \"type\": \"BuyProductCondition\",\n            \"mpr\": \"20\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22,\n                            23\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"DiscountValueReward\",\n            \"value\": 3000,\n            \"amount\": 3000,\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"30\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542231549096,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "a650faa6-ce85-4b9d-8101-3395e12d1613",
          "name": "P27",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"BuyProductCondition\",\n            \"id\": null,\n            \"mpr\": \"20\",\n            \"value\": \"\",\n            \"amount\": \"\",\n            \"url\": \"\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22,\n                            23\n                        ]\n                    }\n                ]\n            }\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"CurrencyReward\",\n            \"value\": \"300\",\n            \"amount\": \"\",\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"\",\n            \"currencyName\": \"POINTS\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542231661446,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "675656e6-86d9-40fd-917c-fe617efd5e50",
          "name": "P28",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"SpendCondition\",\n            \"id\": 1,\n            \"mpr\": 20,\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": \"2\",\n                        \"products\": [\n                            \"22\",\n                            \"23\"\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"200\",\n            \"value\": 20000,\n            \"amount\": 20000\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": 2,\n            \"currencyName\": \"POINTS\",\n            \"value\": 3000,\n            \"valueInDollars\": \"30\",\n            \"amount\": 3000\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542231773269,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "e547020e-eeec-4076-824c-9cfbfcc543ea",
          "name": "P29",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-11-14T11:48:09\",\n    \"endDate\": \"2018-11-28T11:48:09\",\n    \"familyCode\": \"620\",\n    \"gs1Databar\": \"811010021908110786310011062090000\",\n    \"providerPromotionCode\": \"110786\",\n    \"brands\": [\n        {\n            \"brand\": \"2\",\n            \"products\": [\n                \"23\"\n            ]\n        }\n    ],\n    \"title\": \"Get $1.00 OFF\",\n    \"text\": \"When buy Tide PODS\",\n    \"details\": \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax\",\n    \"images\": [\n        \"tidepods/5b6b6b68d12f8512623c2e88.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"SpendCondition\",\n            \"id\": null,\n            \"mpr\": \"\",\n            \"value\": 20000,\n            \"amount\": 20000,\n            \"url\": \"\",\n            \"currencyName\": \"USD\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": [\n                    {\n                        \"brand\": 2,\n                        \"products\": [\n                            22,\n                            23\n                        ]\n                    }\n                ]\n            },\n            \"valueInDollars\": \"200\"\n        },\n        \"reward\": {\n            \"id\": null,\n            \"type\": \"CurrencyReward\",\n            \"value\": \"300\",\n            \"amount\": \"\",\n            \"quantity\": \"\",\n            \"product\": {\n                \"upcs\": [],\n                \"brands\": []\n            },\n            \"valueInDollars\": \"\",\n            \"currencyName\": \"POINTS\"\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542231999730,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "ed75d7f5-01c3-4ed9-b3f6-f38e6f26c81f",
          "name": "P30",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"startDate\": \"2018-01-01T14:00:00\",\n    \"endDate\": \"2018-01-31T14:00:00\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"providerPromotionCode\": \"131240 \",\n    \"title\": \"P30 - Get 10 points when you buy Tide Liquid and Tide Pods \",\n    \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"ivory/5b3e8c36d12f85041119ea07.png\"\n    ],\n    \"rule\": {\n        \"type\": \"SingleRule\",\n        \"id\": 0,\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": 1,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 2,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Pods\"\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": 3,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Liquid\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"CurrencyReward\",\n            \"id\": 4,\n            \"currencyName\": \"Points\",\n            \"value\": 10\n        }\n    },\n    \"modifiedBy\": \"Admin User\",\n    \"modifiedOn\": 1542225856591,\n    \"status\": \"DRAFT\",\n    \"pausedCampaigns\": 0,\n    \"paused\": false,\n    \"budgetId\": \"{{budgetId}}\",\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"centsOff\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "077e9367-af52-4369-9963-99fd4b8045f9",
          "name": "P31",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"P31 - Spend 1000 points in single transaction (basket) and get $1.00 off Tide Liquid  \",\n    \"providerPromotionCode\": \"131240 \",\n    \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"ivory/5b3e8c36d12f85041119ea07.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"SpendCondition\",\n            \"id\": null,\n            \"value\": 1000,\n            \"currencyName\": \"Points\"\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": null,\n            \"value\": 1000\n        }\n    },\n    \"startDate\": \"2018-01-01T14:00:00\",\n    \"endDate\": \"2018-01-31T14:00:00\",\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"nonNegotiable\": false,\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "ab444801-40cc-4dc6-beb4-5dceefc15a29",
          "name": "P32",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"P32 - Buy 3 Tide Liquid and 2 Tide Pods, get $1.00 off and 5 points reward\",\n    \"providerPromotionCode\": \"131240 \",\n    \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"ivory/5b3e8c36d12f85041119ea07.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": null,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Liquid\"\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": 2,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Pods\"\n                                ]\n                            }\n                        ]\n                    }\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"AndReward\",\n            \"id\": null,\n            \"rewards\": [\n                {\n                    \"type\": \"DiscountValueReward\",\n                    \"id\": null,\n                    \"value\": 100\n                },\n                {\n                    \"type\": \"CurrencyReward\",\n                    \"id\": null,\n                    \"currencyName\": \"Points\",\n                    \"value\": 5\n                }\n            ]\n        }\n    },\n    \"startDate\": \"2018-01-01T14:00:00\",\n    \"endDate\": \"2018-01-31T14:00:00\",\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"nonNegotiable\": false,\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "c1e54d6a-b4aa-4415-9d49-5651d8915569",
          "name": "P33",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"P33 - Spend 200 points and get 1 Tide Liquid  \",\n    \"providerPromotionCode\": \"131240 \",\n    \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"ivory/5b3e8c36d12f85041119ea07.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"SpendCondition\",\n            \"id\": null,\n            \"value\": 200,\n            \"currencyName\": \"Points\"\n        },\n        \"reward\": {\n            \"type\": \"FreeProductReward\",\n            \"id\": null,\n            \"quantity\": 1,\n            \"product\": {\n                \"upcs\": [\n                    \"123\",\n                    \"456\",\n                    \"789\"\n                ],\n                \"brands\": [\n                    {\n                        \"brand\": \"Tide\",\n                        \"products\": [\n                            \"Liquid\"\n                        ]\n                    }\n                ]\n            }\n        }\n    },\n    \"startDate\": \"2018-01-01T14:00:00\",\n    \"endDate\": \"2018-01-31T14:00:00\",\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"nonNegotiable\": false,\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "aed2c803-1872-4c13-887c-0e6d01a294f0",
          "name": "P34",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"title\": \"P34 - Buy 1 Tide Liquid and spend 100 points get $5.00 off Tide Pods  (is implemented if read as Buy 1 Tide Liquid and 1 Tide Pods and Spend 100 points, get $5.00 off)\",\n    \"providerPromotionCode\": \"131240 \",\n    \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\n    \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\n    \"images\": [\n        \"ivory/5b3e8c36d12f85041119ea07.png\"\n    ],\n    \"rule\": {\n        \"id\": null,\n        \"type\": \"SingleRule\",\n        \"condition\": {\n            \"type\": \"AndCondition\",\n            \"id\": null,\n            \"conditions\": [\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Liquid\"\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"BuyProductCondition\",\n                    \"id\": null,\n                    \"mpr\": 1,\n                    \"product\": {\n                        \"upcs\": [\n                            \"upc_1\",\n                            \"upc_2\"\n                        ],\n                        \"brands\": [\n                            {\n                                \"brand\": \"Tide\",\n                                \"products\": [\n                                    \"Pods\"\n                                ]\n                            }\n                        ]\n                    }\n                },\n                {\n                    \"type\": \"SpendCondition\",\n                    \"id\": null,\n                    \"value\": 100,\n                    \"currencyName\": \"Points\"\n                }\n            ]\n        },\n        \"reward\": {\n            \"type\": \"DiscountValueReward\",\n            \"id\": null,\n            \"value\": 500\n        }\n    },\n    \"startDate\": \"2018-01-01T14:00:00\",\n    \"endDate\": \"2018-01-31T14:00:00\",\n    \"displayByDate\": \"2018-01-31T14:00:00\",\n    \"budgetId\": \"{{budgetId}}\",\n    \"familyCode\": \"130\",\n    \"gs1Databar\": \"81101007560913123933001101303170701\",\n    \"nonNegotiable\": false,\n    \"properties\": {\n        \"templateName\": {\n            \"type\": \"prop_string\",\n            \"value\": \"custom\"\n        }\n    },\n    \"timezone\": \"UTC+1\"\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "f32d4368-b82e-4a47-9fff-f9f71b1d842e",
          "name": "P35",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\": \"P35 - Buy 3 Tide Liquid and one Tide Pods and spend 20 points and get $2.00 off another Tide Pods (is implemented if read as Buy 3 Tide Liquid and 2 Tide Pods and Spend 20 points, get $2.00 off)\",\r\n  \"providerPromotionCode\": \"131240 \",\r\n  \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\": [\r\n    \"ivory/5b3e8c36d12f85041119ea07.png\"\r\n  ],\r\n  \"rule\": {\r\n    \"id\": null,\r\n    \"type\": \"SingleRule\",\r\n    \"condition\": {\r\n      \"type\": \"AndCondition\",\r\n      \"id\": null,\r\n      \"conditions\": [\r\n        {\r\n          \"type\": \"BuyProductCondition\",\r\n          \"id\": null,\r\n          \"mpr\": 3,\r\n          \"product\": {\r\n            \"upcs\": [\r\n              \"upc_1\",\r\n              \"upc_2\"\r\n            ],\r\n            \"brands\": [\r\n              {\r\n                \"brand\": \"Tide\",\r\n                \"products\": [\r\n                  \"Liquid\"\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"BuyProductCondition\",\r\n          \"id\": null,\r\n          \"mpr\": 2,\r\n          \"product\": {\r\n            \"upcs\": [\r\n              \"upc_1\",\r\n              \"upc_2\"\r\n            ],\r\n            \"brands\": [\r\n              {\r\n                \"brand\": \"Tide\",\r\n                \"products\": [\r\n                  \"Pods\"\r\n                ]\r\n              }\r\n            ]\r\n          }\r\n        },\r\n        {\r\n          \"type\": \"SpendCondition\",\r\n          \"id\": null,\r\n          \"value\": 20,\r\n          \"currencyName\": \"Points\"\r\n        }\r\n      ]\r\n    },\r\n    \"reward\": {\r\n      \"type\": \"DiscountValueReward\",\r\n      \"id\": null,\r\n      \"value\": 200\r\n    }\r\n  },\r\n  \"startDate\": \"2018-01-01T14:00:00\",\r\n  \"endDate\": \"2018-01-31T14:00:00\",\r\n  \"budgetId\": \"budget_id_1\",\r\n  \"familyCode\": \"130\",\r\n  \"gs1Databar\": \"81101007560913123933001101303170701\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        },
        {
          "_postman_id": "ea532161-e64c-42d6-a794-0ccf291b4926",
          "name": "P36",
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "3d8edc0f-0050-4a0c-aad8-0a79ba49b8eb",
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const testObject = pm.response.json();",
                  "",
                  "pm.environment.set(\"promo_id\", testObject.id);",
                  "",
                  "",
                  "pm.test(\"Promo contains Id\", function() {",
                  "    const Id = testObject.id;",
                  "    const lengthId = Id.length > 0;",
                  "    pm.expect(lengthId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains start date\", function() {",
                  "    const startDate = new Date(testObject.startDate);",
                  "    const isADate = Object.prototype.toString.call(startDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains end date\", function() {",
                  "    const endDate = new Date(testObject.endDate);",
                  "    const isADate = Object.prototype.toString.call(endDate) === '[object Date]';",
                  "    pm.expect(isADate).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains budgetId\", function() {",
                  "    const budgetId = testObject.budgetId;",
                  "    const lengthbudgetId = budgetId.length > 0;",
                  "    pm.expect(lengthbudgetId).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains familyCode with 3 digits\", function() {",
                  "    const familyCode = testObject.familyCode;",
                  "    const lengthfamilyCode = familyCode.length == 3;",
                  "    pm.expect(lengthfamilyCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains gs1Databar with more than 25 digits\", function() {",
                  "    const gs1Databar = testObject.gs1Databar;",
                  "    const lengthgs1Databar = gs1Databar.length > 25;",
                  "    pm.expect(lengthgs1Databar).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains title\", function() {",
                  "    const title = testObject.title;",
                  "    const lengthTitle = title.length > 0;",
                  "    pm.expect(lengthTitle).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains text\", function() {",
                  "    const text = testObject.text;",
                  "    const lengthText = text.length > 0;",
                  "    pm.expect(lengthText).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains details\", function() {",
                  "    const details = testObject.details;",
                  "    const lengthDetails = details.length > 0;",
                  "    pm.expect(lengthDetails).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains promo code\", function() {",
                  "    const promoCode = testObject.providerPromotionCode;",
                  "    const lengthPromoCode = promoCode.length > 0;",
                  "    pm.expect(lengthPromoCode).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains images link\", function() {",
                  "    const images = testObject.images;",
                  "    const lengthimages = images.length > 0;",
                  "    pm.expect(lengthimages).to.eql(true);",
                  "});",
                  "",
                  "pm.test(\"Promo contains timezone\", function() {",
                  "    const timezone = testObject.timezone;",
                  "    const lengthTimezone = timezone.length > 0;",
                  "    pm.expect(lengthTimezone).to.eql(true);",
                  "});",
                  "",
                  "",
                  "pm.test(\"Status is Draft\", function () {",
                  "    const status = testObject.status;",
                  "    pm.expect(status).to.eql(\"DRAFT\");",
                  "});"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "id": "2ba26457-225a-45e5-84e2-7af90822fc3b",
                "exec": [
                  "console.log(\"request body\", pm.request.body.raw);",
                  "console.log( JSON.parse(pm.request.body.raw));",
                  "//const promoCentsOffJson = JSON.parse(pm.request.body.raw);",
                  "const promoBasketOffJson = pm.request.body.raw;",
                  "",
                  "pm.environment.set(\"promoBasketOffJson\",promoBasketOffJson);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\": \"P33 - Spend 200 points and get 1 Tide Liquid  \",\r\n  \"providerPromotionCode\": \"131240 \",\r\n  \"text\": \"OFF ONE Ivory Body Wash (21oz or larger) \",\r\n  \"details\": \"Dealer: Submission to Procter & Gamble signifies compliance with 'Requirements for Proper Coupon Redemption.' Please visit this link for coupon terms for proper redemption: http://www.pg.com/en_US/downloads/partners_suppliers/PG_Coupon_Terms_of_Proper_Redemption.pdf. Limit of one coupon per item. Consumer: Limit ONE coupon per purchase of products and quantities stated. Any other use constitutes fraud. Coupons are not authorized if purchasing products for resale. You may pay sales tax. Not valid in Puerto Rico.\",\r\n  \"images\": [\r\n    \"ivory/5b3e8c36d12f85041119ea07.png\"\r\n  ],\r\n  \"rule\": {\r\n    \"id\": null,\r\n    \"type\": \"SingleRule\",\r\n    \"condition\": {\r\n      \"type\": \"SpendCondition\",\r\n      \"id\": null,\r\n      \"value\": 100,\r\n      \"currencyName\": \"Points\"\r\n    },\r\n    \"reward\": {\r\n      \"type\": \"DiscountValueReward\",\r\n      \"id\": null,\r\n      \"value\": 1000,\r\n      \"product\": {\r\n        \"upcs\": [\r\n          \"123\",\r\n          \"456\",\r\n          \"789\"\r\n        ],\r\n        \"brands\": [\r\n          {\r\n            \"brand\": \"Tide\",\r\n            \"products\": [\r\n              \"Liquid\"\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\": \"2018-01-01T14:00:00\",\r\n  \"endDate\": \"2018-01-31T14:00:00\",\r\n  \"budgetId\": \"budget_id_1\",\r\n  \"familyCode\": \"130\",\r\n  \"gs1Databar\": \"81101007560913123933001101303170701\"\r\n}"
            },
            "url": "{{url}}:{{portJedha}}/promotions/"
          },
          "response": []
        }
      ]
    },
    {
      "_postman_id": "b3728a13-7893-413a-9e81-c9ff98244135",
      "name": "Get  Promotions",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c0a25675-772b-49b5-8864-b9858cad1c5f",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "key": "",
            "value": "",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
        },
        "url": "http://qa-hlapps.caligotech.com:8188/promotions/5c2e5bd658665443e57bfc5b"
      },
      "response": []
    },
    {
      "_postman_id": "23e5251d-4ce3-46bb-b511-3c49d18eb398",
      "name": "Delete prom",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "4f8de77f-4cb7-473e-b235-f27ff0ea3d23",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});",
              "",
              "pm.globals.unset(\"promo_id\");",
              ""
            ]
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}"
      },
      "response": []
    },
    {
      "_postman_id": "1f48b7c6-e529-4b25-ae9d-f64a0cbf14c0",
      "name": "Delete Campaigns in bulk",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "31d455e3-bca5-4460-983e-558b394ea490",
            "type": "text/javascript",
            "exec": [
              ""
            ]
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"items\": [\r\n    \"string\"\r\n  ]\r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b43d8d7d12f8529501fc4c7/bulk/campaigns/delete"
      },
      "response": []
    },
    {
      "_postman_id": "b52d384e-a56c-4d41-8769-c3807e32fa47",
      "name": "Get  Campaigns",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "a3bf5b0d-99b5-4656-9cbe-1d055ac4eccc",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "GET",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"title\" : \"title\",\r\n  \"text\" : \"text\",\r\n  \"details\" : \"details\",\r\n  \"images\" : [ \"promotions/1.png\", \"promotions/2.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : 123,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"123\", \"456\", \"789\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"brand_1\",\r\n          \"products\" : [ \"product_1\", \"product_2\" ]\r\n        }, {\r\n          \"brand\" : \"brand_2\",\r\n          \"products\" : [ \"product_3\", \"product_4\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2018-09-22\",\r\n  \"endDate\" : \"2018-12-22\",\r\n  \"budgetId\" : \"budget_id_1\",\r\n  \"familyCode\" : \"999\",\r\n  \"gs1Databar\" : \"811098235223534534\",\r\n  \"providerData\" : {\"key\": \"value\"}\r\n}"
        },
        "url": "http://qa-hlapps.caligotech.com:8188/promotions/campaigns/5c23f9135866542018eb04a8"
      },
      "response": []
    },
    {
      "_postman_id": "8a3fba6f-32c0-45bf-bbec-6978ce27be7d",
      "name": "Delete Campaign",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "7bd7e90c-2ea8-4950-b02a-41cfba837082",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "DELETE",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/{{promo_id}}/campaigns/{{camp_id}}"
      },
      "response": []
    },
    {
      "_postman_id": "6b1d57ee-bf39-47bd-8806-cdb06ed2d6b7",
      "name": "Update promotion",
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"title\" : \"Get ONE Cascadian Farm Cinnamon Crunch Cereal Free\",\r\n  \"providerPromotionCode\" : \"111310 \",\r\n  \"text\" : \"When you buy TWO Cinnamon Crunch Cereal\",\r\n  \"details\" : \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\r\n  \"images\" : [ \"Cascadian/5b3e9e81d12f85041119ea09.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\u00a0\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereald\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereal\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2019-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-01T14:00:00\",\r\n  \"budgetId\" : \"12345\",\r\n  \"familyCode\" : \"412\",\r\n  \"gs1Databar\" : \"811010021908110785310011062090000\"\r\n  \r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b47dbb2d12f8501f57ed7a5",
        "description": "Modify a promotion"
      },
      "response": [
        {
          "id": "d786660e-d494-4753-8436-24ac961f99f1",
          "name": "Update promotion",
          "originalRequest": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json",
                "disabled": false
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"title\" : \"Get ONE Cascadian Farm Cinnamon Crunch Cereal Free\",\r\n  \"providerPromotionCode\" : \"111310 \",\r\n  \"text\" : \"When you buy TWO Cinnamon Crunch Cereal\",\r\n  \"details\" : \"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\r\n  \"images\" : [ \"Cascadian/5b3e9e81d12f85041119ea09.png\" ],\r\n  \"rule\" : {\r\n    \"id\" : null,\r\n    \"type\" : \"SingleRule\",\r\n    \"condition\" : {\r\n      \"id\" : null,\r\n      \"type\" : \"BuyProductCondition\",\r\n      \"mpr\" : 2,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian Farm\u00a0\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereald\" ]\r\n        } ]\r\n      }\r\n    },\r\n    \"reward\" : {\r\n      \"type\" : \"FreeProductReward\",\r\n      \"id\" : null,\r\n      \"quantity\" : 1,\r\n      \"product\" : {\r\n        \"upcs\" : [ \"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\" ],\r\n        \"brands\" : [ {\r\n          \"brand\" : \"Cascadian\",\r\n          \"products\" : [ \"Cinnamon Crunch Cereal\" ]\r\n        } ]\r\n      }\r\n    }\r\n  },\r\n  \"startDate\" : \"2020-01-01T14:00:00\",\r\n  \"endDate\" : \"2019-01-01T14:00:00\",\r\n  \"budgetId\" : \"12345\",\r\n  \"familyCode\" : \"412\",\r\n  \"gs1Databar\" : \"811010021908110785310011062090000\"\r\n  \r\n}"
            },
            "url": "http://qa-apps.caligotech.com:8188/promotions/5bad0485d12f8512a3bfd7ac"
          },
          "status": "OK",
          "code": 200,
          "_postman_previewlanguage": "json",
          "header": [
            {
              "key": "Connection",
              "value": "keep-alive",
              "name": "Connection",
              "description": "Options that are desired for the connection"
            },
            {
              "key": "Content-Type",
              "value": "application/json;charset=UTF-8",
              "name": "Content-Type",
              "description": "The mime type of this content"
            },
            {
              "key": "Date",
              "value": "Thu, 27 Sep 2018 16:29:02 GMT",
              "name": "Date",
              "description": "The date and time that the message was sent"
            },
            {
              "key": "Transfer-Encoding",
              "value": "chunked",
              "name": "Transfer-Encoding",
              "description": "The form of encoding used to safely transfer the entity to the user. Currently defined methods are: chunked, compress, deflate, gzip, identity."
            }
          ],
          "cookie": [],
          "responseTime": null,
          "body": "{\"startDate\":\"2020-01-01T14:00:00\",\"endDate\":\"2019-01-01T14:00:00\",\"budgetId\":\"12345\",\"familyCode\":\"412\",\"gs1Databar\":\"811010021908110785310011062090000\",\"providerPromotionCode\":\"111310 \",\"title\":\"Get ONE Cascadian Farm Cinnamon Crunch Cereal Free\",\"text\":\"When you buy TWO Cinnamon Crunch Cereal\",\"details\":\"Void if altered, copied, sold, purchased, transferred, exchanged or where prohibited or restricted by law. One coupon per purchase of specified product(s). Good only in USA, APOs & FPOs. CONSUMER: No other coupon may be used with this coupon. Consumer pays any sales tax. RETAILER: General Mills will reimburse you the face value of this coupon plus handling if submitted in compliance with our redemption policy. Copy available upon request. Cash value 1/100 cent. Send to GENERAL MILLS 8, NCH Marketing Services, P.O. Box 880001, El Paso TX 88588-0001 or an authorized clearinghouse.\",\"images\":[\"Cascadian/5b3e9e81d12f85041119ea09.png\"],\"rule\":{\"type\":\"SingleRule\",\"id\":0,\"condition\":{\"type\":\"BuyProductCondition\",\"id\":1,\"mpr\":2,\"product\":{\"upcs\":[\"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\"],\"brands\":[{\"brand\":\"Cascadian Farm\u00a0\",\"products\":[\"Cinnamon Crunch Cereald\"]}]}},\"reward\":{\"type\":\"FreeProductReward\",\"id\":2,\"quantity\":1,\"product\":{\"upcs\":[\"1800000001\",\"1800000011\",\"1800000094\",\"1800000105\",\"1800000107\"],\"brands\":[{\"brand\":\"Cascadian\",\"products\":[\"Cinnamon Crunch Cereal\"]}]}}},\"id\":\"5bad0485d12f8512a3bfd7ac\",\"modifiedBy\":\"Admin User\",\"modifiedOn\":1538065742066,\"status\":\"DRAFT\"}"
        }
      ]
    },
    {
      "_postman_id": "0df2f861-007a-4412-a474-9048a028053b",
      "name": "Update Campaigns in bulk",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "bbc7b773-1580-4c73-a3a8-ccb35f30529d",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"items\": [\r\n    {\r\n      \"clipByDate\": \"2018-01-31T14:00:00\",\r\n      \"endDate\": \"2018-01-31T14:00:00\",\r\n      \"id\": \"5b4e5313d12f8521c2dedfcd\",\r\n      \"overrides\": {\r\n        \"details\": \"Details\",\r\n        \"images\": [\r\n          \"Cascadian/5b3e9e81d12f85041119ea09.png\"\r\n        ],\r\n        \"rule\": {\r\n          \"id\": 0,\"type\":\"SingleRule\"\r\n        },\r\n        \"text\": \"text\",\r\n        \"title\": \"title\"\r\n      },\r\n      \"retailerProfileId\": \"1\",\r\n      \"startDate\": \"2018-01-01T14:00:00\"\r\n    }\r\n  ]\r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b47d6fed12f8501f57ed7a4/bulk/campaigns/update"
      },
      "response": []
    },
    {
      "_postman_id": "d55d737b-34d2-4e38-9def-611249cc7978",
      "name": "Update Campaign",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "34593ce3-a934-4416-8a3e-449b9795cf8d",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "PUT",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n   \"clipByDate\": \"2019-01-30T14:00:00\",\r\n      \"endDate\": \"2019-01-30T14:00:00\",\r\n           \"overrides\": {\r\n        \"details\": \"Detail345345s\",\r\n        \"images\": [\r\n          \"Cascadian/5b3e9e81d12f85041119ea09.png\"\r\n        ],\r\n        \"rule\": {\r\n          \"id\": 0,\"type\": \"SingleRule\"\r\n        },\r\n        \"text\": \"text\",\r\n        \"title\": \"title\"\r\n      },\r\n      \"retailerProfileId\": \"1\",\r\n      \"startDate\": \"2019-01-01T14:00:00\"\r\n      \r\n     \r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b47dbb2d12f8501f57ed7a5/campaigns/5b47dc4dd12f8501f57ed7b2",
        "description": "Update Campaign"
      },
      "response": []
    },
    {
      "_postman_id": "560324e6-e890-4160-b188-b36d19f3cbfb",
      "name": "Add Campiagn to the Promotion ",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "c15eaa2a-8ee0-437c-a043-b750c956b857",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"clipByDate\": \"2019-01-01T14:00:00\",\r\n  \"endDate\": \"2019-01-01T14:00:00\",\r\n  \"overrides\": {\r\n    \"details\": \"details\",\r\n    \"images\": [\r\n      \"promotion/5b5645a7d12f856083a47218.png\"\r\n    ],\r\n    \"rule\": {\r\n      \"id\": 0,\"type\": \"SingleRule\"\r\n    },\r\n    \"text\": \"text\",\r\n    \"title\": \"title\"\r\n  },\r\n  \"retailerProfileId\": \"3\",\r\n  \"startDate\": \"2019-01-01T14:00:00\"\r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b6ddb36d12f857a85415116/campaigns/",
        "description": "Post Campaign"
      },
      "response": []
    },
    {
      "_postman_id": "7c954334-fa63-46c8-a2d3-de1fcee6be07",
      "name": "Publish Campiagn",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "8d34b341-9e3c-4b18-8e02-c700a2ae9796",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b47d6fed12f8501f57ed7a4/campaigns/5b4e5313d12f8521c2dedfcf/publish",
        "description": "Publish Campaign"
      },
      "response": []
    },
    {
      "_postman_id": "24c63100-6806-4497-9d20-8bf6828d818d",
      "name": "Publish Promotion",
      "event": [
        {
          "listen": "test",
          "script": {
            "id": "32184f2a-7806-4f65-9451-7a4757eaeeee",
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ]
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\r\n  \"campaignIds\": [\r\n    \"5b4d1a49d12f851c22fd3022\"\r\n  ]\r\n}"
        },
        "url": "http://qa-apps.caligotech.com:8188/promotions/5b6ddb36d12f857a85415116/publish",
        "description": "Publish Promotion"
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "id": "27ae713f-7633-4765-add9-525137e80b06",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "id": "bd312908-837a-4932-8fad-00ab42937c37",
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "id": "77332de9-d34c-4f36-8201-588d9bd37aa0",
      "key": "promo_id",
      "value": "",
      "type": "string"
    },
    {
      "id": "e7e17608-10b2-427f-b5c5-bc30fd5d628f",
      "key": "camp_id",
      "value": "",
      "type": "string"
    }
  ]
}